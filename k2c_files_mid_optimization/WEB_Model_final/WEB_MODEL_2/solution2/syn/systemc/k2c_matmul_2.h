// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _k2c_matmul_2_HH_
#define _k2c_matmul_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "WebModel_fadd_32ncud.h"
#include "WebModel_fmul_32ndEe.h"
#include "WebModel_mul_64s_bkb.h"
#include "WebModel_mul_64nseOg.h"
#include "WebModel_mul_128nfYi.h"
#include "WebModel_mac_mularcU.h"
#include "WebModel_mac_mulasc4.h"
#include "WebModel_mul_mul_ibs.h"

namespace ap_rtl {

struct k2c_matmul_2 : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<15> > C_address0;
    sc_out< sc_logic > C_ce0;
    sc_out< sc_logic > C_we0;
    sc_out< sc_lv<32> > C_d0;
    sc_in< sc_lv<32> > C_q0;
    sc_out< sc_lv<7> > B_address0;
    sc_out< sc_logic > B_ce0;
    sc_in< sc_lv<32> > B_q0;
    sc_out< sc_lv<7> > B_address1;
    sc_out< sc_logic > B_ce1;
    sc_in< sc_lv<32> > B_q1;
    sc_in< sc_lv<64> > B_offset;
    sc_in< sc_lv<64> > outrows;
    sc_in< sc_lv<64> > outcols;
    sc_in< sc_lv<64> > innerdim;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    k2c_matmul_2(sc_module_name name);
    SC_HAS_PROCESS(k2c_matmul_2);

    ~k2c_matmul_2();

    sc_trace_file* mVcdFile;

    WebModel_fadd_32ncud<1,5,32,32,32>* WebModel_fadd_32ncud_U126;
    WebModel_fmul_32ndEe<1,3,32,32,32>* WebModel_fmul_32ndEe_U127;
    WebModel_mul_64s_bkb<1,2,64,64,64>* WebModel_mul_64s_bkb_U128;
    WebModel_mul_64nseOg<1,2,64,64,128>* WebModel_mul_64nseOg_U129;
    WebModel_mul_128nfYi<1,2,128,64,192>* WebModel_mul_128nfYi_U130;
    WebModel_mac_mularcU<1,1,9,9,9,9>* WebModel_mac_mularcU_U131;
    WebModel_mac_mularcU<1,1,9,9,9,9>* WebModel_mac_mularcU_U132;
    WebModel_mac_mulasc4<1,1,9,9,9,9>* WebModel_mac_mulasc4_U133;
    WebModel_mul_mul_ibs<1,1,16,16,16>* WebModel_mul_mul_ibs_U134;
    WebModel_mul_mul_ibs<1,1,16,16,16>* WebModel_mul_mul_ibs_U135;
    sc_signal< sc_lv<13> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<192> > indvar_flatten1_reg_131;
    sc_signal< sc_lv<64> > k_reg_143;
    sc_signal< sc_lv<128> > indvar_flatten_reg_154;
    sc_signal< sc_lv<64> > i_reg_165;
    sc_signal< sc_lv<64> > j_reg_176;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > grp_fu_197_p2;
    sc_signal< sc_lv<64> > tmp_reg_492;
    sc_signal< sc_lv<15> > a10_fu_213_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > tmp_9_fu_219_p1;
    sc_signal< sc_lv<9> > tmp_9_reg_505;
    sc_signal< sc_lv<1> > exitcond3_fu_208_p2;
    sc_signal< sc_lv<128> > grp_fu_228_p2;
    sc_signal< sc_lv<128> > bound_reg_520;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<9> > tmp_8_fu_234_p1;
    sc_signal< sc_lv<9> > tmp_8_reg_526;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<9> > tmp_6_fu_249_p1;
    sc_signal< sc_lv<9> > tmp_6_reg_542;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<16> > tmp_7_fu_252_p1;
    sc_signal< sc_lv<16> > tmp_7_reg_547;
    sc_signal< sc_lv<192> > grp_fu_243_p2;
    sc_signal< sc_lv<192> > bound5_reg_553;
    sc_signal< sc_lv<1> > exitcond_mid_fu_255_p2;
    sc_signal< sc_lv<1> > exitcond_mid_reg_558;
    sc_signal< sc_lv<16> > tmp_12_fu_268_p1;
    sc_signal< sc_lv<16> > tmp_12_reg_563;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<9> > grp_fu_438_p3;
    sc_signal< sc_lv<9> > sum_reg_568;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > exitcond_flatten1_fu_272_p2;
    sc_signal< sc_lv<1> > exitcond_flatten1_reg_573;
    sc_signal< sc_lv<1> > exitcond_flatten1_reg_573_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_277_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_577;
    sc_signal< sc_lv<64> > i_mid_fu_282_p3;
    sc_signal< sc_lv<64> > i_mid_reg_584;
    sc_signal< sc_lv<9> > tmp_13_fu_296_p1;
    sc_signal< sc_lv<9> > tmp_13_reg_590;
    sc_signal< sc_lv<9> > k_cast_mid2_fu_300_p3;
    sc_signal< sc_lv<9> > k_cast_mid2_reg_595;
    sc_signal< sc_lv<1> > exitcond_mid1_fu_313_p3;
    sc_signal< sc_lv<1> > exitcond_mid1_reg_601;
    sc_signal< sc_lv<64> > k_mid2_fu_320_p3;
    sc_signal< sc_lv<64> > k_mid2_reg_608;
    sc_signal< sc_lv<64> > j_mid2_fu_334_p3;
    sc_signal< sc_lv<64> > j_mid2_reg_613;
    sc_signal< sc_lv<9> > tmp_17_fu_342_p1;
    sc_signal< sc_lv<9> > tmp_17_reg_619;
    sc_signal< sc_lv<128> > indvar_flatten_op_fu_346_p2;
    sc_signal< sc_lv<128> > indvar_flatten_op_reg_624;
    sc_signal< sc_lv<9> > tmp_14_fu_357_p1;
    sc_signal< sc_lv<9> > tmp_14_reg_629;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state14_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<16> > tmp_15_fu_361_p1;
    sc_signal< sc_lv<16> > tmp_15_reg_634;
    sc_signal< sc_lv<64> > i_mid2_fu_365_p3;
    sc_signal< sc_lv<64> > i_mid2_reg_639;
    sc_signal< sc_lv<9> > sum3_fu_371_p2;
    sc_signal< sc_lv<9> > sum3_reg_644;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state9_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state15_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<16> > outrowidx_fu_457_p2;
    sc_signal< sc_lv<16> > outrowidx_reg_659;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state10_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state16_pp0_stage3_iter1;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<192> > indvar_flatten_next1_fu_395_p2;
    sc_signal< sc_lv<192> > indvar_flatten_next1_reg_664;
    sc_signal< sc_lv<32> > B_load_1_reg_669;
    sc_signal< sc_lv<32> > B_load_reg_674;
    sc_signal< sc_lv<16> > outrowidx_mid1_fu_461_p2;
    sc_signal< sc_lv<16> > outrowidx_mid1_reg_679;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state11_pp0_stage4_iter0;
    sc_signal< bool > ap_block_state17_pp0_stage4_iter1;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_lv<15> > C_addr_1_reg_684;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_state12_pp0_stage5_iter0;
    sc_signal< bool > ap_block_state18_pp0_stage5_iter1;
    sc_signal< bool > ap_block_pp0_stage5_11001;
    sc_signal< sc_lv<64> > j_1_fu_427_p2;
    sc_signal< sc_lv<64> > j_1_reg_689;
    sc_signal< sc_lv<128> > indvar_flatten_next_fu_432_p3;
    sc_signal< sc_lv<128> > indvar_flatten_next_reg_694;
    sc_signal< sc_lv<32> > grp_fu_193_p2;
    sc_signal< sc_lv<32> > tmp_3_reg_699;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state10;
    sc_signal< bool > ap_block_pp0_stage5_subdone;
    sc_signal< sc_lv<15> > a_reg_120;
    sc_signal< sc_lv<192> > ap_phi_mux_indvar_flatten1_phi_fu_135_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > ap_phi_mux_k_phi_fu_147_p4;
    sc_signal< sc_lv<128> > ap_phi_mux_indvar_flatten_phi_fu_158_p4;
    sc_signal< sc_lv<64> > ap_phi_mux_i_phi_fu_169_p4;
    sc_signal< sc_lv<64> > ap_phi_mux_j_phi_fu_180_p4;
    sc_signal< sc_lv<64> > a_cast_fu_203_p1;
    sc_signal< sc_lv<64> > sum_cast_mid2_fu_386_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > sum3_cast_fu_391_p1;
    sc_signal< sc_lv<64> > sum2_cast_fu_422_p1;
    sc_signal< bool > ap_block_pp0_stage5;
    sc_signal< sc_lv<32> > grp_fu_187_p2;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< sc_lv<64> > cast_fu_222_p0;
    sc_signal< sc_lv<64> > cast2_fu_225_p0;
    sc_signal< sc_lv<64> > grp_fu_228_p0;
    sc_signal< sc_lv<64> > grp_fu_228_p1;
    sc_signal< sc_lv<128> > grp_fu_243_p0;
    sc_signal< sc_lv<64> > grp_fu_243_p1;
    sc_signal< sc_lv<64> > tmp_6_fu_249_p0;
    sc_signal< sc_lv<64> > tmp_7_fu_252_p0;
    sc_signal< sc_lv<64> > exitcond_mid_fu_255_p0;
    sc_signal< sc_lv<64> > k_s_fu_290_p2;
    sc_signal< sc_lv<9> > tmp_10_fu_260_p1;
    sc_signal< sc_lv<64> > exitcond_fu_308_p1;
    sc_signal< sc_lv<1> > exitcond_fu_308_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_328_p2;
    sc_signal< sc_lv<64> > i_3_fu_352_p2;
    sc_signal< sc_lv<9> > grp_fu_445_p3;
    sc_signal< sc_lv<9> > grp_fu_451_p3;
    sc_signal< sc_lv<9> > sum_cast_mid221_v_fu_375_p3;
    sc_signal< sc_lv<9> > sum_cast_mid2_v_fu_380_p3;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<16> > outrowidx_mid_fu_401_p3;
    sc_signal< sc_lv<16> > tmp_16_fu_413_p1;
    sc_signal< sc_lv<16> > outrowidx_mid2_fu_407_p3;
    sc_signal< sc_lv<16> > sum2_fu_416_p2;
    sc_signal< sc_lv<9> > grp_fu_438_p0;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<13> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<128> > grp_fu_228_p00;
    sc_signal< sc_lv<128> > grp_fu_228_p10;
    sc_signal< sc_lv<192> > grp_fu_243_p00;
    sc_signal< sc_lv<192> > grp_fu_243_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<13> ap_ST_fsm_state1;
    static const sc_lv<13> ap_ST_fsm_state2;
    static const sc_lv<13> ap_ST_fsm_state3;
    static const sc_lv<13> ap_ST_fsm_state4;
    static const sc_lv<13> ap_ST_fsm_state5;
    static const sc_lv<13> ap_ST_fsm_state6;
    static const sc_lv<13> ap_ST_fsm_pp0_stage0;
    static const sc_lv<13> ap_ST_fsm_pp0_stage1;
    static const sc_lv<13> ap_ST_fsm_pp0_stage2;
    static const sc_lv<13> ap_ST_fsm_pp0_stage3;
    static const sc_lv<13> ap_ST_fsm_pp0_stage4;
    static const sc_lv<13> ap_ST_fsm_pp0_stage5;
    static const sc_lv<13> ap_ST_fsm_state19;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<192> ap_const_lv192_lc_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<128> ap_const_lv128_lc_1;
    static const sc_lv<15> ap_const_lv15_1;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<128> ap_const_lv128_lc_2;
    static const sc_lv<192> ap_const_lv192_lc_2;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_C;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_B_address0();
    void thread_B_address1();
    void thread_B_ce0();
    void thread_B_ce1();
    void thread_C_address0();
    void thread_C_ce0();
    void thread_C_d0();
    void thread_C_we0();
    void thread_a10_fu_213_p2();
    void thread_a_cast_fu_203_p1();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_pp0_stage5();
    void thread_ap_block_pp0_stage5_11001();
    void thread_ap_block_pp0_stage5_subdone();
    void thread_ap_block_state10_pp0_stage3_iter0();
    void thread_ap_block_state11_pp0_stage4_iter0();
    void thread_ap_block_state12_pp0_stage5_iter0();
    void thread_ap_block_state13_pp0_stage0_iter1();
    void thread_ap_block_state14_pp0_stage1_iter1();
    void thread_ap_block_state15_pp0_stage2_iter1();
    void thread_ap_block_state16_pp0_stage3_iter1();
    void thread_ap_block_state17_pp0_stage4_iter1();
    void thread_ap_block_state18_pp0_stage5_iter1();
    void thread_ap_block_state7_pp0_stage0_iter0();
    void thread_ap_block_state8_pp0_stage1_iter0();
    void thread_ap_block_state9_pp0_stage2_iter0();
    void thread_ap_condition_pp0_exit_iter0_state10();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_phi_fu_169_p4();
    void thread_ap_phi_mux_indvar_flatten1_phi_fu_135_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_158_p4();
    void thread_ap_phi_mux_j_phi_fu_180_p4();
    void thread_ap_phi_mux_k_phi_fu_147_p4();
    void thread_ap_ready();
    void thread_cast2_fu_225_p0();
    void thread_cast_fu_222_p0();
    void thread_exitcond3_fu_208_p2();
    void thread_exitcond_flatten1_fu_272_p2();
    void thread_exitcond_flatten_fu_277_p2();
    void thread_exitcond_fu_308_p1();
    void thread_exitcond_fu_308_p2();
    void thread_exitcond_mid1_fu_313_p3();
    void thread_exitcond_mid_fu_255_p0();
    void thread_exitcond_mid_fu_255_p2();
    void thread_grp_fu_228_p0();
    void thread_grp_fu_228_p00();
    void thread_grp_fu_228_p1();
    void thread_grp_fu_228_p10();
    void thread_grp_fu_243_p0();
    void thread_grp_fu_243_p00();
    void thread_grp_fu_243_p1();
    void thread_grp_fu_243_p10();
    void thread_grp_fu_438_p0();
    void thread_i_3_fu_352_p2();
    void thread_i_mid2_fu_365_p3();
    void thread_i_mid_fu_282_p3();
    void thread_indvar_flatten_next1_fu_395_p2();
    void thread_indvar_flatten_next_fu_432_p3();
    void thread_indvar_flatten_op_fu_346_p2();
    void thread_j_1_fu_427_p2();
    void thread_j_mid2_fu_334_p3();
    void thread_k_cast_mid2_fu_300_p3();
    void thread_k_mid2_fu_320_p3();
    void thread_k_s_fu_290_p2();
    void thread_outrowidx_mid2_fu_407_p3();
    void thread_outrowidx_mid_fu_401_p3();
    void thread_sum2_cast_fu_422_p1();
    void thread_sum2_fu_416_p2();
    void thread_sum3_cast_fu_391_p1();
    void thread_sum3_fu_371_p2();
    void thread_sum_cast_mid221_v_fu_375_p3();
    void thread_sum_cast_mid2_fu_386_p1();
    void thread_sum_cast_mid2_v_fu_380_p3();
    void thread_tmp_10_fu_260_p1();
    void thread_tmp_12_fu_268_p1();
    void thread_tmp_13_fu_296_p1();
    void thread_tmp_14_fu_357_p1();
    void thread_tmp_15_fu_361_p1();
    void thread_tmp_16_fu_413_p1();
    void thread_tmp_17_fu_342_p1();
    void thread_tmp_2_fu_328_p2();
    void thread_tmp_6_fu_249_p0();
    void thread_tmp_6_fu_249_p1();
    void thread_tmp_7_fu_252_p0();
    void thread_tmp_7_fu_252_p1();
    void thread_tmp_8_fu_234_p1();
    void thread_tmp_9_fu_219_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
