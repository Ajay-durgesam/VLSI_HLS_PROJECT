// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __WebModel_dense_71UhA_H__
#define __WebModel_dense_71UhA_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct WebModel_dense_71UhA_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 64;
  static const unsigned AddressWidth = 6;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(WebModel_dense_71UhA_ram) {
        ram[0] = "0b00111110011010101000101100010010";
        ram[1] = "0b00111101010010010011001100100110";
        ram[2] = "0b10111110101001100101101111100111";
        ram[3] = "0b00111100100111101101110011000001";
        ram[4] = "0b10111110111010110110101101000110";
        ram[5] = "0b00111110101010000001010101010001";
        ram[6] = "0b00111101101011100010101110101000";
        ram[7] = "0b10111110110000100100010101100010";
        ram[8] = "0b10111110001100101011011010001101";
        ram[9] = "0b10111111001111000001101000001110";
        ram[10] = "0b10111111001000111111101010011101";
        ram[11] = "0b00111110011100011110001110100011";
        ram[12] = "0b10111110111111010010010101111011";
        ram[13] = "0b00111100000001010001110010011101";
        ram[14] = "0b10111111111101000101001110011000";
        ram[15] = "0b10111111000100111101111101111010";
        ram[16] = "0b00111101111011100001001000101010";
        ram[17] = "0b00111110011111101011110101100010";
        ram[18] = "0b00111110010101010111100000100101";
        ram[19] = "0b10111110111001011110000010001010";
        ram[20] = "0b00111111011100010100110010101100";
        ram[21] = "0b10111110110000000110100000010111";
        ram[22] = "0b10111111001000100100111101101110";
        ram[23] = "0b10111110110011101011101000010111";
        ram[24] = "0b00111101011111111010111110010100";
        ram[25] = "0b10111101111010000000100110101011";
        ram[26] = "0b10111110000010100111011100101111";
        ram[27] = "0b10111110100001010000111010001001";
        ram[28] = "0b10111111010001001001000101100110";
        ram[29] = "0b00111011000111000100000000010011";
        ram[30] = "0b10111100001000001010011001111000";
        ram[31] = "0b00111101110100011011100110000000";
        ram[32] = "0b00111110101010010100010111011101";
        ram[33] = "0b00111110110101001010000001010010";
        ram[34] = "0b00111101100010010100111111001110";
        ram[35] = "0b10111110000110111001001110000111";
        ram[36] = "0b00111110001100011100100010001011";
        ram[37] = "0b10111110100011111100011010011010";
        ram[38] = "0b10111111000001101111000100011010";
        ram[39] = "0b10111110111100001111100010101010";
        ram[40] = "0b10111110011010011001000011110011";
        ram[41] = "0b10111111000110100110110101010110";
        ram[42] = "0b10111101101110000001011010001100";
        ram[43] = "0b10111111000101101011010001001100";
        ram[44] = "0b00111101100110100010010000000011";
        ram[45] = "0b10111110110101100010011000010100";
        ram[46] = "0b10111110101101000010001011101001";
        ram[47] = "0b00111101010010011101010000010010";
        ram[48] = "0b00111100000010111011011000011011";
        ram[49] = "0b00111101111001010100110000111111";
        ram[50] = "0b10111111011010100010011010111110";
        ram[51] = "0b10111111000100110100000111010001";
        ram[52] = "0b10111110111111001101100100100110";
        ram[53] = "0b00111110001001110010101101010011";
        ram[54] = "0b00111101011001000101101100100111";
        ram[55] = "0b10111100000001010000111110000110";
        ram[56] = "0b00111011101000100010001101011001";
        ram[57] = "0b00111111010101010011100101110011";
        ram[58] = "0b00111110100010011110100010100110";
        ram[59] = "0b10111110001101101101110111100001";
        ram[60] = "0b00111110000110111010100010110100";
        ram[61] = "0b10111110101111001111111110000000";
        ram[62] = "0b00111101000101000000111000100100";
        ram[63] = "0b00111110100000000100010001000110";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(WebModel_dense_71UhA) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 64;
static const unsigned AddressWidth = 6;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


WebModel_dense_71UhA_ram* meminst;


SC_CTOR(WebModel_dense_71UhA) {
meminst = new WebModel_dense_71UhA_ram("WebModel_dense_71UhA_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~WebModel_dense_71UhA() {
    delete meminst;
}


};//endmodule
#endif
