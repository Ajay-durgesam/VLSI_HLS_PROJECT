// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _k2c_affine_matmul_HH_
#define _k2c_affine_matmul_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "WebModel_fadd_32ncud.h"
#include "WebModel_fmul_32ndEe.h"
#include "WebModel_mul_64s_bkb.h"
#include "WebModel_mul_64nseOg.h"
#include "WebModel_mac_mulag8j.h"
#include "WebModel_mul_mul_ibs.h"

namespace ap_rtl {

struct k2c_affine_matmul : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<15> > C_address0;
    sc_out< sc_logic > C_ce0;
    sc_out< sc_logic > C_we0;
    sc_out< sc_lv<32> > C_d0;
    sc_in< sc_lv<32> > C_q0;
    sc_out< sc_lv<15> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_in< sc_lv<32> > A_q0;
    sc_out< sc_lv<15> > B_address0;
    sc_out< sc_logic > B_ce0;
    sc_in< sc_lv<32> > B_q0;
    sc_out< sc_lv<15> > d_address0;
    sc_out< sc_logic > d_ce0;
    sc_in< sc_lv<32> > d_q0;
    sc_in< sc_lv<64> > outrows;
    sc_in< sc_lv<64> > outcols;
    sc_in< sc_lv<64> > innerdim;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    k2c_affine_matmul(sc_module_name name);
    SC_HAS_PROCESS(k2c_affine_matmul);

    ~k2c_affine_matmul();

    sc_trace_file* mVcdFile;

    WebModel_fadd_32ncud<1,5,32,32,32>* WebModel_fadd_32ncud_U53;
    WebModel_fmul_32ndEe<1,3,32,32,32>* WebModel_fmul_32ndEe_U54;
    WebModel_mul_64s_bkb<1,2,64,64,64>* WebModel_mul_64s_bkb_U55;
    WebModel_mul_64nseOg<1,2,64,64,128>* WebModel_mul_64nseOg_U56;
    WebModel_mac_mulag8j<1,1,16,16,16,16>* WebModel_mac_mulag8j_U57;
    WebModel_mul_mul_ibs<1,1,16,16,16>* WebModel_mul_mul_ibs_U58;
    WebModel_mac_mulag8j<1,1,16,16,16,16>* WebModel_mac_mulag8j_U59;
    sc_signal< sc_lv<20> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > k_reg_169;
    sc_signal< sc_lv<32> > reg_190;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state12_pp0_stage5_iter0;
    sc_signal< bool > ap_block_pp0_stage5_11001;
    sc_signal< sc_lv<1> > exitcond_reg_440;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > grp_fu_195_p2;
    sc_signal< sc_lv<64> > tmp_reg_356;
    sc_signal< sc_lv<15> > p_1_fu_211_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond3_fu_206_p2;
    sc_signal< sc_lv<16> > tmp_65_fu_229_p1;
    sc_signal< sc_lv<16> > tmp_65_reg_379;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<16> > tmp_66_fu_232_p1;
    sc_signal< sc_lv<16> > tmp_66_reg_385;
    sc_signal< sc_lv<128> > grp_fu_223_p2;
    sc_signal< sc_lv<128> > bound_reg_390;
    sc_signal< sc_lv<128> > indvar_flatten_next_fu_240_p2;
    sc_signal< sc_lv<128> > indvar_flatten_next_reg_398;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond1_fu_246_p2;
    sc_signal< sc_lv<1> > exitcond1_reg_403;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_235_p2;
    sc_signal< sc_lv<64> > outrowidx_mid2_v_v_fu_257_p3;
    sc_signal< sc_lv<64> > outrowidx_mid2_v_v_reg_408;
    sc_signal< sc_lv<16> > tmp_67_fu_265_p1;
    sc_signal< sc_lv<16> > tmp_67_reg_413;
    sc_signal< sc_lv<64> > j_mid2_fu_269_p3;
    sc_signal< sc_lv<64> > j_mid2_reg_419;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<16> > inneridx_mid2_fu_325_p2;
    sc_signal< sc_lv<16> > inneridx_mid2_reg_425;
    sc_signal< sc_lv<16> > tmp_68_fu_276_p1;
    sc_signal< sc_lv<16> > tmp_68_reg_430;
    sc_signal< sc_lv<15> > C_addr_4_reg_435;
    sc_signal< sc_lv<1> > exitcond_fu_284_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_reg_440_pp0_iter1_reg;
    sc_signal< sc_lv<64> > k_1_fu_289_p2;
    sc_signal< sc_lv<64> > k_1_reg_444;
    sc_signal< sc_lv<32> > A_load_reg_459;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state14_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > B_load_reg_464;
    sc_signal< sc_lv<32> > grp_fu_186_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_469;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state11_pp0_stage4_iter0;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<64> > j_8_fu_313_p2;
    sc_signal< sc_lv<64> > j_8_reg_479;
    sc_signal< sc_lv<32> > d_load_reg_484;
    sc_signal< sc_lv<32> > grp_fu_180_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_489;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage5_subdone;
    sc_signal< bool > ap_block_state10_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state16_pp0_stage3_iter1;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< sc_lv<15> > p_reg_124;
    sc_signal< sc_lv<128> > indvar_flatten_reg_135;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<64> > i_reg_146;
    sc_signal< sc_lv<64> > j_reg_157;
    sc_signal< sc_lv<64> > ap_phi_mux_k_phi_fu_173_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > p_cast_fu_201_p1;
    sc_signal< sc_lv<64> > sum2_cast_fu_280_p1;
    sc_signal< sc_lv<64> > sum5_cast_fu_304_p1;
    sc_signal< sc_lv<64> > sum8_cast_fu_309_p1;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<32> > grp_fu_180_p0;
    sc_signal< sc_lv<32> > grp_fu_180_p1;
    sc_signal< bool > ap_block_pp0_stage5;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > cast_fu_217_p0;
    sc_signal< sc_lv<64> > cast1_fu_220_p0;
    sc_signal< sc_lv<64> > grp_fu_223_p0;
    sc_signal< sc_lv<64> > grp_fu_223_p1;
    sc_signal< sc_lv<64> > tmp_65_fu_229_p0;
    sc_signal< sc_lv<64> > exitcond1_fu_246_p1;
    sc_signal< sc_lv<64> > i_s_fu_251_p2;
    sc_signal< sc_lv<16> > grp_fu_318_p3;
    sc_signal< sc_lv<16> > tmp_69_fu_295_p1;
    sc_signal< sc_lv<16> > sum5_fu_299_p2;
    sc_signal< sc_lv<16> > grp_fu_329_p3;
    sc_signal< sc_lv<16> > grp_fu_318_p2;
    sc_signal< sc_lv<20> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_state9_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state15_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<128> > grp_fu_223_p00;
    sc_signal< sc_lv<128> > grp_fu_223_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<20> ap_ST_fsm_state1;
    static const sc_lv<20> ap_ST_fsm_state2;
    static const sc_lv<20> ap_ST_fsm_state3;
    static const sc_lv<20> ap_ST_fsm_state4;
    static const sc_lv<20> ap_ST_fsm_state5;
    static const sc_lv<20> ap_ST_fsm_state6;
    static const sc_lv<20> ap_ST_fsm_pp0_stage0;
    static const sc_lv<20> ap_ST_fsm_pp0_stage1;
    static const sc_lv<20> ap_ST_fsm_pp0_stage2;
    static const sc_lv<20> ap_ST_fsm_pp0_stage3;
    static const sc_lv<20> ap_ST_fsm_pp0_stage4;
    static const sc_lv<20> ap_ST_fsm_pp0_stage5;
    static const sc_lv<20> ap_ST_fsm_state17;
    static const sc_lv<20> ap_ST_fsm_state18;
    static const sc_lv<20> ap_ST_fsm_state19;
    static const sc_lv<20> ap_ST_fsm_state20;
    static const sc_lv<20> ap_ST_fsm_state21;
    static const sc_lv<20> ap_ST_fsm_state22;
    static const sc_lv<20> ap_ST_fsm_state23;
    static const sc_lv<20> ap_ST_fsm_state24;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<128> ap_const_lv128_lc_1;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<15> ap_const_lv15_1;
    static const sc_lv<128> ap_const_lv128_lc_2;
    static const sc_lv<64> ap_const_lv64_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_B_address0();
    void thread_B_ce0();
    void thread_C_address0();
    void thread_C_ce0();
    void thread_C_d0();
    void thread_C_we0();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_pp0_stage5();
    void thread_ap_block_pp0_stage5_11001();
    void thread_ap_block_pp0_stage5_subdone();
    void thread_ap_block_state10_pp0_stage3_iter0();
    void thread_ap_block_state11_pp0_stage4_iter0();
    void thread_ap_block_state12_pp0_stage5_iter0();
    void thread_ap_block_state13_pp0_stage0_iter1();
    void thread_ap_block_state14_pp0_stage1_iter1();
    void thread_ap_block_state15_pp0_stage2_iter1();
    void thread_ap_block_state16_pp0_stage3_iter1();
    void thread_ap_block_state7_pp0_stage0_iter0();
    void thread_ap_block_state8_pp0_stage1_iter0();
    void thread_ap_block_state9_pp0_stage2_iter0();
    void thread_ap_condition_pp0_exit_iter0_state7();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_k_phi_fu_173_p4();
    void thread_ap_ready();
    void thread_cast1_fu_220_p0();
    void thread_cast_fu_217_p0();
    void thread_d_address0();
    void thread_d_ce0();
    void thread_exitcond1_fu_246_p1();
    void thread_exitcond1_fu_246_p2();
    void thread_exitcond3_fu_206_p2();
    void thread_exitcond_flatten_fu_235_p2();
    void thread_exitcond_fu_284_p2();
    void thread_grp_fu_180_p0();
    void thread_grp_fu_180_p1();
    void thread_grp_fu_223_p0();
    void thread_grp_fu_223_p00();
    void thread_grp_fu_223_p1();
    void thread_grp_fu_223_p10();
    void thread_grp_fu_318_p2();
    void thread_i_s_fu_251_p2();
    void thread_indvar_flatten_next_fu_240_p2();
    void thread_j_8_fu_313_p2();
    void thread_j_mid2_fu_269_p3();
    void thread_k_1_fu_289_p2();
    void thread_outrowidx_mid2_v_v_fu_257_p3();
    void thread_p_1_fu_211_p2();
    void thread_p_cast_fu_201_p1();
    void thread_sum2_cast_fu_280_p1();
    void thread_sum5_cast_fu_304_p1();
    void thread_sum5_fu_299_p2();
    void thread_sum8_cast_fu_309_p1();
    void thread_tmp_65_fu_229_p0();
    void thread_tmp_65_fu_229_p1();
    void thread_tmp_66_fu_232_p1();
    void thread_tmp_67_fu_265_p1();
    void thread_tmp_68_fu_276_p1();
    void thread_tmp_69_fu_295_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
