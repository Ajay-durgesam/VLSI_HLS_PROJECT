// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_dense (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_array_address0,
        output_array_ce0,
        output_array_we0,
        output_array_d0,
        output_array_q0,
        output_numel_read,
        input_array_address0,
        input_array_ce0,
        input_array_q0,
        input_ndim_read,
        input_numel_read,
        input_shape_address0,
        input_shape_ce0,
        input_shape_q0,
        kernel_array_address0,
        kernel_array_ce0,
        kernel_array_q0,
        kernel_ndim_read,
        kernel_numel_read,
        kernel_shape_address0,
        kernel_shape_ce0,
        kernel_shape_q0,
        bias_array_address0,
        bias_array_ce0,
        bias_array_q0,
        bias_numel_read
);

parameter    ap_ST_fsm_state1 = 69'd1;
parameter    ap_ST_fsm_state2 = 69'd2;
parameter    ap_ST_fsm_state3 = 69'd4;
parameter    ap_ST_fsm_pp0_stage0 = 69'd8;
parameter    ap_ST_fsm_pp0_stage1 = 69'd16;
parameter    ap_ST_fsm_pp0_stage2 = 69'd32;
parameter    ap_ST_fsm_pp0_stage3 = 69'd64;
parameter    ap_ST_fsm_pp0_stage4 = 69'd128;
parameter    ap_ST_fsm_pp0_stage5 = 69'd256;
parameter    ap_ST_fsm_state11 = 69'd512;
parameter    ap_ST_fsm_state12 = 69'd1024;
parameter    ap_ST_fsm_state13 = 69'd2048;
parameter    ap_ST_fsm_state14 = 69'd4096;
parameter    ap_ST_fsm_state15 = 69'd8192;
parameter    ap_ST_fsm_state16 = 69'd16384;
parameter    ap_ST_fsm_state17 = 69'd32768;
parameter    ap_ST_fsm_state18 = 69'd65536;
parameter    ap_ST_fsm_state19 = 69'd131072;
parameter    ap_ST_fsm_state20 = 69'd262144;
parameter    ap_ST_fsm_state21 = 69'd524288;
parameter    ap_ST_fsm_state22 = 69'd1048576;
parameter    ap_ST_fsm_state23 = 69'd2097152;
parameter    ap_ST_fsm_state24 = 69'd4194304;
parameter    ap_ST_fsm_state25 = 69'd8388608;
parameter    ap_ST_fsm_state26 = 69'd16777216;
parameter    ap_ST_fsm_state27 = 69'd33554432;
parameter    ap_ST_fsm_state28 = 69'd67108864;
parameter    ap_ST_fsm_state29 = 69'd134217728;
parameter    ap_ST_fsm_state30 = 69'd268435456;
parameter    ap_ST_fsm_state31 = 69'd536870912;
parameter    ap_ST_fsm_state32 = 69'd1073741824;
parameter    ap_ST_fsm_state33 = 69'd2147483648;
parameter    ap_ST_fsm_state34 = 69'd4294967296;
parameter    ap_ST_fsm_state35 = 69'd8589934592;
parameter    ap_ST_fsm_state36 = 69'd17179869184;
parameter    ap_ST_fsm_state37 = 69'd34359738368;
parameter    ap_ST_fsm_state38 = 69'd68719476736;
parameter    ap_ST_fsm_state39 = 69'd137438953472;
parameter    ap_ST_fsm_state40 = 69'd274877906944;
parameter    ap_ST_fsm_state41 = 69'd549755813888;
parameter    ap_ST_fsm_state42 = 69'd1099511627776;
parameter    ap_ST_fsm_state43 = 69'd2199023255552;
parameter    ap_ST_fsm_state44 = 69'd4398046511104;
parameter    ap_ST_fsm_state45 = 69'd8796093022208;
parameter    ap_ST_fsm_state46 = 69'd17592186044416;
parameter    ap_ST_fsm_state47 = 69'd35184372088832;
parameter    ap_ST_fsm_state48 = 69'd70368744177664;
parameter    ap_ST_fsm_state49 = 69'd140737488355328;
parameter    ap_ST_fsm_state50 = 69'd281474976710656;
parameter    ap_ST_fsm_state51 = 69'd562949953421312;
parameter    ap_ST_fsm_state52 = 69'd1125899906842624;
parameter    ap_ST_fsm_state53 = 69'd2251799813685248;
parameter    ap_ST_fsm_state54 = 69'd4503599627370496;
parameter    ap_ST_fsm_state55 = 69'd9007199254740992;
parameter    ap_ST_fsm_state56 = 69'd18014398509481984;
parameter    ap_ST_fsm_state57 = 69'd36028797018963968;
parameter    ap_ST_fsm_state58 = 69'd72057594037927936;
parameter    ap_ST_fsm_state59 = 69'd144115188075855872;
parameter    ap_ST_fsm_state60 = 69'd288230376151711744;
parameter    ap_ST_fsm_state61 = 69'd576460752303423488;
parameter    ap_ST_fsm_state62 = 69'd1152921504606846976;
parameter    ap_ST_fsm_state63 = 69'd2305843009213693952;
parameter    ap_ST_fsm_state64 = 69'd4611686018427387904;
parameter    ap_ST_fsm_state65 = 69'd9223372036854775808;
parameter    ap_ST_fsm_state66 = 69'd18446744073709551616;
parameter    ap_ST_fsm_state67 = 69'd36893488147419103232;
parameter    ap_ST_fsm_state68 = 69'd73786976294838206464;
parameter    ap_ST_fsm_state69 = 69'd147573952589676412928;
parameter    ap_ST_fsm_state70 = 69'd295147905179352825856;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [14:0] output_array_address0;
output   output_array_ce0;
output   output_array_we0;
output  [31:0] output_array_d0;
input  [31:0] output_array_q0;
input  [63:0] output_numel_read;
output  [14:0] input_array_address0;
output   input_array_ce0;
input  [31:0] input_array_q0;
input  [63:0] input_ndim_read;
input  [63:0] input_numel_read;
output  [2:0] input_shape_address0;
output   input_shape_ce0;
input  [63:0] input_shape_q0;
output  [14:0] kernel_array_address0;
output   kernel_array_ce0;
input  [31:0] kernel_array_q0;
input  [63:0] kernel_ndim_read;
input  [63:0] kernel_numel_read;
output  [2:0] kernel_shape_address0;
output   kernel_shape_ce0;
input  [63:0] kernel_shape_q0;
output  [14:0] bias_array_address0;
output   bias_array_ce0;
input  [31:0] bias_array_q0;
input  [63:0] bias_numel_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[14:0] output_array_address0;
reg output_array_ce0;
reg output_array_we0;
reg[31:0] output_array_d0;
reg[14:0] input_array_address0;
reg input_array_ce0;
reg[2:0] input_shape_address0;
reg input_shape_ce0;
reg[14:0] kernel_array_address0;
reg kernel_array_ce0;
reg[2:0] kernel_shape_address0;
reg kernel_shape_ce0;
reg[14:0] bias_array_address0;
reg bias_array_ce0;

(* fsm_encoding = "none" *) reg   [68:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] j_i_reg_198;
reg   [31:0] reg_290;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state6_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] exitcond_i3_reg_516;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state44;
wire   [31:0] grp_fu_285_p2;
reg   [31:0] reg_295;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state52;
wire   [31:0] grp_fu_273_p2;
reg   [31:0] reg_300;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state57;
wire   [31:0] grp_fu_280_p2;
reg   [31:0] reg_305;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state69;
wire   [0:0] tmp_fu_310_p2;
reg   [0:0] tmp_reg_483;
wire   [63:0] tmp_3_fu_316_p2;
reg   [63:0] tmp_3_reg_487;
wire   [0:0] icmp_fu_333_p2;
reg   [0:0] icmp_reg_492;
wire   [0:0] tmp_i2_fu_339_p2;
wire    ap_CS_fsm_state3;
wire   [15:0] tmp_63_fu_344_p1;
reg   [15:0] tmp_63_reg_511;
wire   [0:0] exitcond_i3_fu_348_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] j_fu_353_p2;
reg   [63:0] j_reg_520;
reg   [14:0] output_array_addr_1_reg_530;
reg   [31:0] bias_array_load_reg_535;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state5_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [63:0] i_25_fu_373_p2;
wire    ap_CS_fsm_state11;
wire   [14:0] i_52_fu_388_p2;
reg   [14:0] i_52_reg_548;
wire    ap_CS_fsm_state12;
reg   [14:0] output_array_addr_2_reg_553;
wire   [0:0] exitcond_i6_fu_383_p2;
wire   [31:0] tmp_i1_fu_404_p1;
wire    ap_CS_fsm_state14;
wire  signed [63:0] outrows1_fu_409_p3;
reg   [63:0] outrows1_reg_563;
wire    ap_CS_fsm_state40;
reg   [63:0] outcols_reg_569;
reg   [63:0] innerdim_reg_580;
wire    ap_CS_fsm_state41;
wire   [63:0] grp_fu_416_p2;
reg   [63:0] outsize_reg_585;
wire    ap_CS_fsm_state42;
wire    grp_k2c_affine_matmul_fu_257_ap_idle;
wire    grp_k2c_affine_matmul_fu_257_ap_ready;
wire    grp_k2c_affine_matmul_fu_257_ap_done;
wire   [14:0] i_fu_430_p2;
reg   [14:0] i_reg_593;
wire    ap_CS_fsm_state43;
reg   [14:0] output_array_addr_reg_598;
wire   [0:0] exitcond_i_fu_425_p2;
wire   [31:0] tmp_i_fu_446_p1;
wire    ap_CS_fsm_state45;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state9_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_subdone;
wire    ap_CS_fsm_pp0_stage5;
wire    grp_k2c_dot_2_fu_232_ap_start;
wire    grp_k2c_dot_2_fu_232_ap_done;
wire    grp_k2c_dot_2_fu_232_ap_idle;
wire    grp_k2c_dot_2_fu_232_ap_ready;
wire   [14:0] grp_k2c_dot_2_fu_232_C_array_address0;
wire    grp_k2c_dot_2_fu_232_C_array_ce0;
wire    grp_k2c_dot_2_fu_232_C_array_we0;
wire   [31:0] grp_k2c_dot_2_fu_232_C_array_d0;
wire   [14:0] grp_k2c_dot_2_fu_232_A_array_address0;
wire    grp_k2c_dot_2_fu_232_A_array_ce0;
wire   [2:0] grp_k2c_dot_2_fu_232_A_shape_address0;
wire    grp_k2c_dot_2_fu_232_A_shape_ce0;
wire   [14:0] grp_k2c_dot_2_fu_232_B_array_address0;
wire    grp_k2c_dot_2_fu_232_B_array_ce0;
wire   [2:0] grp_k2c_dot_2_fu_232_B_shape_address0;
wire    grp_k2c_dot_2_fu_232_B_shape_ce0;
wire    grp_k2c_affine_matmul_fu_257_ap_start;
wire   [14:0] grp_k2c_affine_matmul_fu_257_C_address0;
wire    grp_k2c_affine_matmul_fu_257_C_ce0;
wire    grp_k2c_affine_matmul_fu_257_C_we0;
wire   [31:0] grp_k2c_affine_matmul_fu_257_C_d0;
wire   [14:0] grp_k2c_affine_matmul_fu_257_A_address0;
wire    grp_k2c_affine_matmul_fu_257_A_ce0;
wire   [14:0] grp_k2c_affine_matmul_fu_257_B_address0;
wire    grp_k2c_affine_matmul_fu_257_B_ce0;
wire   [14:0] grp_k2c_affine_matmul_fu_257_d_address0;
wire    grp_k2c_affine_matmul_fu_257_d_ce0;
reg   [63:0] i_i1_reg_186;
wire    ap_CS_fsm_state2;
reg   [63:0] ap_phi_mux_j_i_phi_fu_202_p4;
wire    ap_block_pp0_stage0;
reg   [14:0] i_i5_reg_210;
wire    ap_CS_fsm_state39;
reg   [14:0] i_i_reg_221;
wire    ap_CS_fsm_state70;
reg    grp_k2c_dot_2_fu_232_ap_start_reg;
reg    grp_k2c_affine_matmul_fu_257_ap_start_reg;
wire   [63:0] tmp_i_cast_fu_368_p1;
wire   [63:0] i_i5_cast_fu_378_p1;
wire   [63:0] i_i_cast_fu_420_p1;
wire    ap_block_pp0_stage1;
reg   [31:0] grp_fu_273_p0;
reg   [31:0] grp_fu_273_p1;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state58;
reg   [31:0] grp_fu_285_p1;
wire   [62:0] tmp_62_fu_323_p4;
wire   [15:0] tmp_64_fu_359_p1;
wire   [15:0] tmp_i_27_fu_363_p2;
wire   [31:0] tmp_to_int_i9_fu_394_p1;
wire   [31:0] tmp_neg_i1_fu_398_p2;
wire   [31:0] tmp_to_int_i_fu_436_p1;
wire   [31:0] tmp_neg_i_fu_440_p2;
reg    grp_fu_416_ce;
reg   [68:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_state7_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_state8_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 69'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_k2c_dot_2_fu_232_ap_start_reg = 1'b0;
#0 grp_k2c_affine_matmul_fu_257_ap_start_reg = 1'b0;
end

k2c_dot_2 grp_k2c_dot_2_fu_232(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dot_2_fu_232_ap_start),
    .ap_done(grp_k2c_dot_2_fu_232_ap_done),
    .ap_idle(grp_k2c_dot_2_fu_232_ap_idle),
    .ap_ready(grp_k2c_dot_2_fu_232_ap_ready),
    .C_array_address0(grp_k2c_dot_2_fu_232_C_array_address0),
    .C_array_ce0(grp_k2c_dot_2_fu_232_C_array_ce0),
    .C_array_we0(grp_k2c_dot_2_fu_232_C_array_we0),
    .C_array_d0(grp_k2c_dot_2_fu_232_C_array_d0),
    .C_array_q0(output_array_q0),
    .A_array_address0(grp_k2c_dot_2_fu_232_A_array_address0),
    .A_array_ce0(grp_k2c_dot_2_fu_232_A_array_ce0),
    .A_array_q0(input_array_q0),
    .A_ndim_read(input_ndim_read),
    .A_numel_read(input_numel_read),
    .A_shape_address0(grp_k2c_dot_2_fu_232_A_shape_address0),
    .A_shape_ce0(grp_k2c_dot_2_fu_232_A_shape_ce0),
    .A_shape_q0(input_shape_q0),
    .B_array_address0(grp_k2c_dot_2_fu_232_B_array_address0),
    .B_array_ce0(grp_k2c_dot_2_fu_232_B_array_ce0),
    .B_array_q0(kernel_array_q0),
    .B_ndim_read(kernel_ndim_read),
    .B_numel_read(kernel_numel_read),
    .B_shape_address0(grp_k2c_dot_2_fu_232_B_shape_address0),
    .B_shape_ce0(grp_k2c_dot_2_fu_232_B_shape_ce0),
    .B_shape_q0(kernel_shape_q0),
    .p_read4(tmp_3_reg_487)
);

k2c_affine_matmul grp_k2c_affine_matmul_fu_257(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_affine_matmul_fu_257_ap_start),
    .ap_done(grp_k2c_affine_matmul_fu_257_ap_done),
    .ap_idle(grp_k2c_affine_matmul_fu_257_ap_idle),
    .ap_ready(grp_k2c_affine_matmul_fu_257_ap_ready),
    .C_address0(grp_k2c_affine_matmul_fu_257_C_address0),
    .C_ce0(grp_k2c_affine_matmul_fu_257_C_ce0),
    .C_we0(grp_k2c_affine_matmul_fu_257_C_we0),
    .C_d0(grp_k2c_affine_matmul_fu_257_C_d0),
    .C_q0(output_array_q0),
    .A_address0(grp_k2c_affine_matmul_fu_257_A_address0),
    .A_ce0(grp_k2c_affine_matmul_fu_257_A_ce0),
    .A_q0(input_array_q0),
    .B_address0(grp_k2c_affine_matmul_fu_257_B_address0),
    .B_ce0(grp_k2c_affine_matmul_fu_257_B_ce0),
    .B_q0(kernel_array_q0),
    .d_address0(grp_k2c_affine_matmul_fu_257_d_address0),
    .d_ce0(grp_k2c_affine_matmul_fu_257_d_ce0),
    .d_q0(bias_array_q0),
    .outrows(outrows1_reg_563),
    .outcols(outcols_reg_569),
    .innerdim(innerdim_reg_580)
);

WebModel_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
WebModel_fadd_32ncud_U161(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_273_p0),
    .din1(grp_fu_273_p1),
    .ce(1'b1),
    .dout(grp_fu_273_p2)
);

WebModel_fdiv_32nudo #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
WebModel_fdiv_32nudo_U162(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1065353216),
    .din1(reg_300),
    .ce(1'b1),
    .dout(grp_fu_280_p2)
);

WebModel_fexp_32nvdy #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
WebModel_fexp_32nvdy_U163(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(grp_fu_285_p1),
    .ce(1'b1),
    .dout(grp_fu_285_p2)
);

WebModel_mul_64s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
WebModel_mul_64s_bkb_U164(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(outcols_reg_569),
    .din1(outrows1_reg_563),
    .ce(grp_fu_416_ce),
    .dout(grp_fu_416_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_i2_fu_339_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state4) & (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
        end else if ((((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((tmp_i2_fu_339_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_affine_matmul_fu_257_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state41)) begin
            grp_k2c_affine_matmul_fu_257_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_affine_matmul_fu_257_ap_ready == 1'b1)) begin
            grp_k2c_affine_matmul_fu_257_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dot_2_fu_232_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_310_p2 == 1'd0))) begin
            grp_k2c_dot_2_fu_232_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dot_2_fu_232_ap_ready == 1'b1)) begin
            grp_k2c_dot_2_fu_232_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_i1_reg_186 <= i_25_fu_373_p2;
    end else if (((grp_k2c_dot_2_fu_232_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_i1_reg_186 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_i2_fu_339_p2 == 1'd0))) begin
        i_i5_reg_210 <= 15'd0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        i_i5_reg_210 <= i_52_reg_548;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        i_i_reg_221 <= i_reg_593;
    end else if (((grp_k2c_affine_matmul_fu_257_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
        i_i_reg_221 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i2_fu_339_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        j_i_reg_198 <= 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_i3_reg_516 == 1'd0))) begin
        j_i_reg_198 <= j_reg_520;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_i3_reg_516 == 1'd0))) begin
        bias_array_load_reg_535 <= bias_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_i3_reg_516 <= exitcond_i3_fu_348_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_52_reg_548 <= i_52_fu_388_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_483 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        i_reg_593 <= i_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (tmp_fu_310_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        icmp_reg_492 <= icmp_fu_333_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        innerdim_reg_580 <= kernel_shape_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_reg_520 <= j_fu_353_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        outcols_reg_569 <= kernel_shape_q0;
        outrows1_reg_563 <= outrows1_fu_409_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_i3_fu_348_p2 == 1'd0))) begin
        output_array_addr_1_reg_530 <= tmp_i_cast_fu_368_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (exitcond_i6_fu_383_p2 == 1'd0))) begin
        output_array_addr_2_reg_553 <= i_i5_cast_fu_378_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_483 == 1'd1) & (1'b1 == ap_CS_fsm_state43) & (exitcond_i_fu_425_p2 == 1'd0))) begin
        output_array_addr_reg_598 <= i_i_cast_fu_420_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_k2c_affine_matmul_fu_257_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
        outsize_reg_585 <= grp_fu_416_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state13) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_i3_reg_516 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_290 <= output_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_295 <= grp_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state26))) begin
        reg_300 <= grp_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state38))) begin
        reg_305 <= grp_fu_280_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_310_p2 == 1'd0))) begin
        tmp_3_reg_487 <= tmp_3_fu_316_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i2_fu_339_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_63_reg_511 <= tmp_63_fu_344_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_reg_483 <= tmp_fu_310_p2;
    end
end

always @ (*) begin
    if ((exitcond_i3_fu_348_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state43) & ((exitcond_i_fu_425_p2 == 1'd1) | (tmp_reg_483 == 1'd0))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_i3_reg_516 == 1'd0))) begin
        ap_phi_mux_j_i_phi_fu_202_p4 = j_reg_520;
    end else begin
        ap_phi_mux_j_i_phi_fu_202_p4 = j_i_reg_198;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) & ((exitcond_i_fu_425_p2 == 1'd1) | (tmp_reg_483 == 1'd0)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        bias_array_address0 = ap_phi_mux_j_i_phi_fu_202_p4;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        bias_array_address0 = grp_k2c_affine_matmul_fu_257_d_address0;
    end else begin
        bias_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        bias_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        bias_array_ce0 = grp_k2c_affine_matmul_fu_257_d_ce0;
    end else begin
        bias_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_273_p0 = reg_295;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_273_p0 = output_array_q0;
    end else begin
        grp_fu_273_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_273_p1 = 32'd1065353216;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_273_p1 = bias_array_load_reg_535;
    end else begin
        grp_fu_273_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_285_p1 = tmp_i_fu_446_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_285_p1 = tmp_i1_fu_404_p1;
    end else begin
        grp_fu_285_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((grp_k2c_affine_matmul_fu_257_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state42)))) begin
        grp_fu_416_ce = 1'b1;
    end else begin
        grp_fu_416_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        input_array_address0 = grp_k2c_affine_matmul_fu_257_A_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_array_address0 = grp_k2c_dot_2_fu_232_A_array_address0;
    end else begin
        input_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        input_array_ce0 = grp_k2c_affine_matmul_fu_257_A_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_array_ce0 = grp_k2c_dot_2_fu_232_A_array_ce0;
    end else begin
        input_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_310_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        input_shape_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_shape_address0 = grp_k2c_dot_2_fu_232_A_shape_address0;
    end else begin
        input_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (tmp_fu_310_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        input_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_shape_ce0 = grp_k2c_dot_2_fu_232_A_shape_ce0;
    end else begin
        input_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        kernel_array_address0 = grp_k2c_affine_matmul_fu_257_B_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_array_address0 = grp_k2c_dot_2_fu_232_B_array_address0;
    end else begin
        kernel_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        kernel_array_ce0 = grp_k2c_affine_matmul_fu_257_B_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_array_ce0 = grp_k2c_dot_2_fu_232_B_array_ce0;
    end else begin
        kernel_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        kernel_shape_address0 = 64'd0;
    end else if (((tmp_fu_310_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_shape_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_shape_address0 = grp_k2c_dot_2_fu_232_B_shape_address0;
    end else begin
        kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((ap_start == 1'b1) & (tmp_fu_310_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_shape_ce0 = grp_k2c_dot_2_fu_232_B_shape_ce0;
    end else begin
        kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        output_array_address0 = output_array_addr_reg_598;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        output_array_address0 = i_i_cast_fu_420_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_array_address0 = output_array_addr_2_reg_553;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_array_address0 = i_i5_cast_fu_378_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        output_array_address0 = output_array_addr_1_reg_530;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        output_array_address0 = grp_k2c_affine_matmul_fu_257_C_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_address0 = grp_k2c_dot_2_fu_232_C_array_address0;
    end else begin
        output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        output_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        output_array_ce0 = grp_k2c_affine_matmul_fu_257_C_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_ce0 = grp_k2c_dot_2_fu_232_C_array_ce0;
    end else begin
        output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state39))) begin
        output_array_d0 = reg_305;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_array_d0 = grp_fu_273_p2;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        output_array_d0 = grp_k2c_affine_matmul_fu_257_C_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_d0 = grp_k2c_dot_2_fu_232_C_array_d0;
    end else begin
        output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state39) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_i3_reg_516 == 1'd0)))) begin
        output_array_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        output_array_we0 = grp_k2c_affine_matmul_fu_257_C_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_we0 = grp_k2c_dot_2_fu_232_C_array_we0;
    end else begin
        output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (tmp_fu_310_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_310_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_k2c_dot_2_fu_232_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (tmp_i2_fu_339_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_i3_fu_348_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_i3_fu_348_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state12 : begin
            if (((exitcond_i6_fu_383_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((grp_k2c_affine_matmul_fu_257_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((1'b1 == ap_CS_fsm_state43) & ((exitcond_i_fu_425_p2 == 1'd1) | (tmp_reg_483 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd68];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond_i3_fu_348_p2 = ((ap_phi_mux_j_i_phi_fu_202_p4 == bias_numel_read) ? 1'b1 : 1'b0);

assign exitcond_i6_fu_383_p2 = ((i_i5_cast_fu_378_p1 == output_numel_read) ? 1'b1 : 1'b0);

assign exitcond_i_fu_425_p2 = ((i_i_cast_fu_420_p1 == outsize_reg_585) ? 1'b1 : 1'b0);

assign grp_k2c_affine_matmul_fu_257_ap_start = grp_k2c_affine_matmul_fu_257_ap_start_reg;

assign grp_k2c_dot_2_fu_232_ap_start = grp_k2c_dot_2_fu_232_ap_start_reg;

assign i_25_fu_373_p2 = (i_i1_reg_186 + bias_numel_read);

assign i_52_fu_388_p2 = (i_i5_reg_210 + 15'd1);

assign i_fu_430_p2 = (i_i_reg_221 + 15'd1);

assign i_i5_cast_fu_378_p1 = i_i5_reg_210;

assign i_i_cast_fu_420_p1 = i_i_reg_221;

assign icmp_fu_333_p2 = ((tmp_62_fu_323_p4 != 63'd0) ? 1'b1 : 1'b0);

assign j_fu_353_p2 = (ap_phi_mux_j_i_phi_fu_202_p4 + 64'd1);

assign outrows1_fu_409_p3 = ((icmp_reg_492[0:0] === 1'b1) ? input_shape_q0 : 64'd1);

assign tmp_3_fu_316_p2 = ($signed(input_ndim_read) + $signed(64'd18446744073709551615));

assign tmp_62_fu_323_p4 = {{input_ndim_read[63:1]}};

assign tmp_63_fu_344_p1 = i_i1_reg_186[15:0];

assign tmp_64_fu_359_p1 = ap_phi_mux_j_i_phi_fu_202_p4[15:0];

assign tmp_fu_310_p2 = ((input_ndim_read < 64'd3) ? 1'b1 : 1'b0);

assign tmp_i1_fu_404_p1 = tmp_neg_i1_fu_398_p2;

assign tmp_i2_fu_339_p2 = ((i_i1_reg_186 < output_numel_read) ? 1'b1 : 1'b0);

assign tmp_i_27_fu_363_p2 = (tmp_64_fu_359_p1 + tmp_63_reg_511);

assign tmp_i_cast_fu_368_p1 = tmp_i_27_fu_363_p2;

assign tmp_i_fu_446_p1 = tmp_neg_i_fu_440_p2;

assign tmp_neg_i1_fu_398_p2 = (tmp_to_int_i9_fu_394_p1 ^ 32'd2147483648);

assign tmp_neg_i_fu_440_p2 = (tmp_to_int_i_fu_436_p1 ^ 32'd2147483648);

assign tmp_to_int_i9_fu_394_p1 = reg_290;

assign tmp_to_int_i_fu_436_p1 = reg_290;

endmodule //k2c_dense
