// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_dense (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_array_address0,
        output_array_ce0,
        output_array_we0,
        output_array_d0,
        output_array_q0,
        output_array_address1,
        output_array_ce1,
        output_array_we1,
        output_array_d1,
        output_array_q1,
        output_numel_read,
        input_array_address0,
        input_array_ce0,
        input_array_q0,
        input_ndim_read,
        input_numel_read,
        input_shape_address0,
        input_shape_ce0,
        input_shape_q0,
        kernel_array_address0,
        kernel_array_ce0,
        kernel_array_q0,
        kernel_ndim_read,
        kernel_numel_read,
        kernel_shape_address0,
        kernel_shape_ce0,
        kernel_shape_q0,
        bias_array_address0,
        bias_array_ce0,
        bias_array_q0,
        bias_numel_read
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_pp0_stage0 = 17'd8;
parameter    ap_ST_fsm_pp0_stage1 = 17'd16;
parameter    ap_ST_fsm_pp0_stage2 = 17'd32;
parameter    ap_ST_fsm_pp0_stage3 = 17'd64;
parameter    ap_ST_fsm_pp0_stage4 = 17'd128;
parameter    ap_ST_fsm_pp0_stage5 = 17'd256;
parameter    ap_ST_fsm_state11 = 17'd512;
parameter    ap_ST_fsm_pp1_stage0 = 17'd1024;
parameter    ap_ST_fsm_state40 = 17'd2048;
parameter    ap_ST_fsm_state41 = 17'd4096;
parameter    ap_ST_fsm_state42 = 17'd8192;
parameter    ap_ST_fsm_state43 = 17'd16384;
parameter    ap_ST_fsm_pp2_stage0 = 17'd32768;
parameter    ap_ST_fsm_state72 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [14:0] output_array_address0;
output   output_array_ce0;
output   output_array_we0;
output  [31:0] output_array_d0;
input  [31:0] output_array_q0;
output  [14:0] output_array_address1;
output   output_array_ce1;
output   output_array_we1;
output  [31:0] output_array_d1;
input  [31:0] output_array_q1;
input  [63:0] output_numel_read;
output  [14:0] input_array_address0;
output   input_array_ce0;
input  [31:0] input_array_q0;
input  [63:0] input_ndim_read;
input  [63:0] input_numel_read;
output  [2:0] input_shape_address0;
output   input_shape_ce0;
input  [63:0] input_shape_q0;
output  [14:0] kernel_array_address0;
output   kernel_array_ce0;
input  [31:0] kernel_array_q0;
input  [63:0] kernel_ndim_read;
input  [63:0] kernel_numel_read;
output  [2:0] kernel_shape_address0;
output   kernel_shape_ce0;
input  [63:0] kernel_shape_q0;
output  [14:0] bias_array_address0;
output   bias_array_ce0;
input  [31:0] bias_array_q0;
input  [63:0] bias_numel_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[14:0] output_array_address0;
reg output_array_ce0;
reg output_array_we0;
reg[31:0] output_array_d0;
reg[14:0] output_array_address1;
reg output_array_ce1;
reg output_array_we1;
reg[14:0] input_array_address0;
reg input_array_ce0;
reg[2:0] input_shape_address0;
reg input_shape_ce0;
reg[14:0] kernel_array_address0;
reg kernel_array_ce0;
reg[2:0] kernel_shape_address0;
reg kernel_shape_ce0;
reg[14:0] bias_array_address0;
reg bias_array_ce0;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] j_i_reg_204;
reg   [14:0] i_i4_reg_216;
reg   [14:0] i_i_reg_227;
reg   [31:0] reg_296;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state6_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] exitcond_i3_reg_524;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_state12_pp1_stage0_iter0;
wire    ap_block_state13_pp1_stage0_iter1;
wire    ap_block_state14_pp1_stage0_iter2;
wire    ap_block_state15_pp1_stage0_iter3;
wire    ap_block_state16_pp1_stage0_iter4;
wire    ap_block_state17_pp1_stage0_iter5;
wire    ap_block_state18_pp1_stage0_iter6;
wire    ap_block_state19_pp1_stage0_iter7;
wire    ap_block_state20_pp1_stage0_iter8;
wire    ap_block_state21_pp1_stage0_iter9;
wire    ap_block_state22_pp1_stage0_iter10;
wire    ap_block_state23_pp1_stage0_iter11;
wire    ap_block_state24_pp1_stage0_iter12;
wire    ap_block_state25_pp1_stage0_iter13;
wire    ap_block_state26_pp1_stage0_iter14;
wire    ap_block_state27_pp1_stage0_iter15;
wire    ap_block_state28_pp1_stage0_iter16;
wire    ap_block_state29_pp1_stage0_iter17;
wire    ap_block_state30_pp1_stage0_iter18;
wire    ap_block_state31_pp1_stage0_iter19;
wire    ap_block_state32_pp1_stage0_iter20;
wire    ap_block_state33_pp1_stage0_iter21;
wire    ap_block_state34_pp1_stage0_iter22;
wire    ap_block_state35_pp1_stage0_iter23;
wire    ap_block_state36_pp1_stage0_iter24;
wire    ap_block_state37_pp1_stage0_iter25;
wire    ap_block_state38_pp1_stage0_iter26;
wire    ap_block_state39_pp1_stage0_iter27;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] exitcond_i5_reg_553;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_state44_pp2_stage0_iter0;
wire    ap_block_state45_pp2_stage0_iter1;
wire    ap_block_state46_pp2_stage0_iter2;
wire    ap_block_state47_pp2_stage0_iter3;
wire    ap_block_state48_pp2_stage0_iter4;
wire    ap_block_state49_pp2_stage0_iter5;
wire    ap_block_state50_pp2_stage0_iter6;
wire    ap_block_state51_pp2_stage0_iter7;
wire    ap_block_state52_pp2_stage0_iter8;
wire    ap_block_state53_pp2_stage0_iter9;
wire    ap_block_state54_pp2_stage0_iter10;
wire    ap_block_state55_pp2_stage0_iter11;
wire    ap_block_state56_pp2_stage0_iter12;
wire    ap_block_state57_pp2_stage0_iter13;
wire    ap_block_state58_pp2_stage0_iter14;
wire    ap_block_state59_pp2_stage0_iter15;
wire    ap_block_state60_pp2_stage0_iter16;
wire    ap_block_state61_pp2_stage0_iter17;
wire    ap_block_state62_pp2_stage0_iter18;
wire    ap_block_state63_pp2_stage0_iter19;
wire    ap_block_state64_pp2_stage0_iter20;
wire    ap_block_state65_pp2_stage0_iter21;
wire    ap_block_state66_pp2_stage0_iter22;
wire    ap_block_state67_pp2_stage0_iter23;
wire    ap_block_state68_pp2_stage0_iter24;
wire    ap_block_state69_pp2_stage0_iter25;
wire    ap_block_state70_pp2_stage0_iter26;
wire    ap_block_state71_pp2_stage0_iter27;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] exitcond_i_reg_600;
wire   [31:0] grp_fu_291_p2;
reg   [31:0] reg_302;
reg    ap_enable_reg_pp1_iter9;
reg   [0:0] exitcond_i5_reg_553_pp1_iter8_reg;
reg    ap_enable_reg_pp2_iter9;
reg   [0:0] exitcond_i_reg_600_pp2_iter8_reg;
wire   [31:0] grp_fu_279_p2;
reg   [31:0] reg_307;
reg    ap_enable_reg_pp1_iter14;
reg   [0:0] exitcond_i5_reg_553_pp1_iter13_reg;
reg    ap_enable_reg_pp2_iter14;
reg   [0:0] exitcond_i_reg_600_pp2_iter13_reg;
wire   [31:0] grp_fu_286_p2;
reg   [31:0] reg_312;
reg    ap_enable_reg_pp1_iter26;
reg   [0:0] exitcond_i5_reg_553_pp1_iter25_reg;
reg    ap_enable_reg_pp2_iter26;
reg   [0:0] exitcond_i_reg_600_pp2_iter25_reg;
wire   [0:0] tmp_fu_318_p2;
wire   [63:0] tmp_9_fu_324_p2;
reg   [63:0] tmp_9_reg_495;
wire   [0:0] icmp_fu_341_p2;
reg   [0:0] icmp_reg_500;
wire   [0:0] tmp_i2_fu_347_p2;
wire    ap_CS_fsm_state3;
wire   [15:0] tmp_67_fu_352_p1;
reg   [15:0] tmp_67_reg_519;
wire   [0:0] exitcond_i3_fu_356_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] j_fu_361_p2;
reg   [63:0] j_reg_528;
reg   [14:0] output_array_addr_1_reg_538;
reg   [31:0] bias_array_load_reg_543;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state5_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [63:0] i_25_fu_381_p2;
wire    ap_CS_fsm_state11;
wire   [0:0] exitcond_i5_fu_391_p2;
reg   [0:0] exitcond_i5_reg_553_pp1_iter1_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter2_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter3_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter4_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter5_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter6_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter7_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter9_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter10_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter11_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter12_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter14_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter15_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter16_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter17_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter18_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter19_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter20_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter21_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter22_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter23_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter24_reg;
reg   [0:0] exitcond_i5_reg_553_pp1_iter26_reg;
wire   [14:0] i_52_fu_396_p2;
reg    ap_enable_reg_pp1_iter0;
reg   [14:0] output_array_addr_2_reg_562;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter1_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter2_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter3_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter4_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter5_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter6_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter7_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter8_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter9_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter10_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter11_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter12_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter13_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter14_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter15_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter16_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter17_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter18_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter19_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter20_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter21_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter22_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter23_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter24_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter25_reg;
reg   [14:0] output_array_addr_2_reg_562_pp1_iter26_reg;
wire   [31:0] tmp_i1_fu_412_p1;
wire  signed [63:0] outrows_fu_417_p3;
reg   [63:0] outrows_reg_573;
wire    ap_CS_fsm_state41;
reg   [63:0] outcols_reg_579;
reg   [63:0] innerdim_reg_590;
wire    ap_CS_fsm_state42;
wire   [63:0] grp_fu_424_p2;
reg   [63:0] outsize_reg_595;
wire    ap_CS_fsm_state43;
wire    grp_k2c_affine_matmul_fu_263_ap_idle;
wire    grp_k2c_affine_matmul_fu_263_ap_ready;
wire    grp_k2c_affine_matmul_fu_263_ap_done;
wire   [0:0] exitcond_i_fu_433_p2;
reg   [0:0] exitcond_i_reg_600_pp2_iter1_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter2_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter3_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter4_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter5_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter6_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter7_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter9_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter10_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter11_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter12_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter14_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter15_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter16_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter17_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter18_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter19_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter20_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter21_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter22_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter23_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter24_reg;
reg   [0:0] exitcond_i_reg_600_pp2_iter26_reg;
wire   [14:0] i_fu_438_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [14:0] output_array_addr_reg_609;
reg   [14:0] output_array_addr_reg_609_pp2_iter1_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter2_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter3_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter4_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter5_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter6_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter7_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter8_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter9_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter10_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter11_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter12_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter13_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter14_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter15_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter16_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter17_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter18_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter19_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter20_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter21_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter22_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter23_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter24_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter25_reg;
reg   [14:0] output_array_addr_reg_609_pp2_iter26_reg;
wire   [31:0] tmp_i_fu_454_p1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state9_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_subdone;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter12;
reg    ap_enable_reg_pp1_iter13;
reg    ap_enable_reg_pp1_iter15;
reg    ap_enable_reg_pp1_iter16;
reg    ap_enable_reg_pp1_iter17;
reg    ap_enable_reg_pp1_iter18;
reg    ap_enable_reg_pp1_iter19;
reg    ap_enable_reg_pp1_iter20;
reg    ap_enable_reg_pp1_iter21;
reg    ap_enable_reg_pp1_iter22;
reg    ap_enable_reg_pp1_iter23;
reg    ap_enable_reg_pp1_iter24;
reg    ap_enable_reg_pp1_iter25;
reg    ap_enable_reg_pp1_iter27;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state44;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter12;
reg    ap_enable_reg_pp2_iter13;
reg    ap_enable_reg_pp2_iter15;
reg    ap_enable_reg_pp2_iter16;
reg    ap_enable_reg_pp2_iter17;
reg    ap_enable_reg_pp2_iter18;
reg    ap_enable_reg_pp2_iter19;
reg    ap_enable_reg_pp2_iter20;
reg    ap_enable_reg_pp2_iter21;
reg    ap_enable_reg_pp2_iter22;
reg    ap_enable_reg_pp2_iter23;
reg    ap_enable_reg_pp2_iter24;
reg    ap_enable_reg_pp2_iter25;
reg    ap_enable_reg_pp2_iter27;
wire    grp_k2c_dot_2_fu_238_ap_start;
wire    grp_k2c_dot_2_fu_238_ap_done;
wire    grp_k2c_dot_2_fu_238_ap_idle;
wire    grp_k2c_dot_2_fu_238_ap_ready;
wire   [14:0] grp_k2c_dot_2_fu_238_C_array_address0;
wire    grp_k2c_dot_2_fu_238_C_array_ce0;
wire    grp_k2c_dot_2_fu_238_C_array_we0;
wire   [31:0] grp_k2c_dot_2_fu_238_C_array_d0;
wire   [14:0] grp_k2c_dot_2_fu_238_A_array_address0;
wire    grp_k2c_dot_2_fu_238_A_array_ce0;
wire   [2:0] grp_k2c_dot_2_fu_238_A_shape_address0;
wire    grp_k2c_dot_2_fu_238_A_shape_ce0;
wire   [14:0] grp_k2c_dot_2_fu_238_B_array_address0;
wire    grp_k2c_dot_2_fu_238_B_array_ce0;
wire   [2:0] grp_k2c_dot_2_fu_238_B_shape_address0;
wire    grp_k2c_dot_2_fu_238_B_shape_ce0;
wire    grp_k2c_affine_matmul_fu_263_ap_start;
wire   [14:0] grp_k2c_affine_matmul_fu_263_C_address0;
wire    grp_k2c_affine_matmul_fu_263_C_ce0;
wire    grp_k2c_affine_matmul_fu_263_C_we0;
wire   [31:0] grp_k2c_affine_matmul_fu_263_C_d0;
wire   [14:0] grp_k2c_affine_matmul_fu_263_A_address0;
wire    grp_k2c_affine_matmul_fu_263_A_ce0;
wire   [14:0] grp_k2c_affine_matmul_fu_263_B_address0;
wire    grp_k2c_affine_matmul_fu_263_B_ce0;
wire   [14:0] grp_k2c_affine_matmul_fu_263_d_address0;
wire    grp_k2c_affine_matmul_fu_263_d_ce0;
reg   [63:0] i_i1_reg_192;
wire    ap_CS_fsm_state2;
reg   [63:0] ap_phi_mux_j_i_phi_fu_208_p4;
wire    ap_block_pp0_stage0;
reg    grp_k2c_dot_2_fu_238_ap_start_reg;
reg    grp_k2c_affine_matmul_fu_263_ap_start_reg;
wire   [63:0] tmp_i_cast_fu_376_p1;
wire   [63:0] i_i4_cast_fu_386_p1;
wire    ap_block_pp1_stage0;
wire   [63:0] i_i_cast_fu_428_p1;
wire    ap_block_pp2_stage0;
wire    ap_block_pp0_stage1;
reg   [31:0] grp_fu_279_p0;
reg   [31:0] grp_fu_279_p1;
wire    ap_block_pp0_stage2;
reg   [31:0] grp_fu_291_p1;
wire   [62:0] tmp_66_fu_331_p4;
wire   [15:0] tmp_68_fu_367_p1;
wire   [15:0] tmp_i_52_fu_371_p2;
wire   [31:0] tmp_to_int_i9_fu_402_p1;
wire   [31:0] tmp_neg_i1_fu_406_p2;
wire   [31:0] tmp_to_int_i_fu_444_p1;
wire   [31:0] tmp_neg_i_fu_448_p2;
reg    grp_fu_424_ce;
wire    ap_CS_fsm_state72;
reg   [16:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_state7_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_state8_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp2_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter26 = 1'b0;
#0 ap_enable_reg_pp2_iter26 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter15 = 1'b0;
#0 ap_enable_reg_pp1_iter16 = 1'b0;
#0 ap_enable_reg_pp1_iter17 = 1'b0;
#0 ap_enable_reg_pp1_iter18 = 1'b0;
#0 ap_enable_reg_pp1_iter19 = 1'b0;
#0 ap_enable_reg_pp1_iter20 = 1'b0;
#0 ap_enable_reg_pp1_iter21 = 1'b0;
#0 ap_enable_reg_pp1_iter22 = 1'b0;
#0 ap_enable_reg_pp1_iter23 = 1'b0;
#0 ap_enable_reg_pp1_iter24 = 1'b0;
#0 ap_enable_reg_pp1_iter25 = 1'b0;
#0 ap_enable_reg_pp1_iter27 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp2_iter15 = 1'b0;
#0 ap_enable_reg_pp2_iter16 = 1'b0;
#0 ap_enable_reg_pp2_iter17 = 1'b0;
#0 ap_enable_reg_pp2_iter18 = 1'b0;
#0 ap_enable_reg_pp2_iter19 = 1'b0;
#0 ap_enable_reg_pp2_iter20 = 1'b0;
#0 ap_enable_reg_pp2_iter21 = 1'b0;
#0 ap_enable_reg_pp2_iter22 = 1'b0;
#0 ap_enable_reg_pp2_iter23 = 1'b0;
#0 ap_enable_reg_pp2_iter24 = 1'b0;
#0 ap_enable_reg_pp2_iter25 = 1'b0;
#0 ap_enable_reg_pp2_iter27 = 1'b0;
#0 grp_k2c_dot_2_fu_238_ap_start_reg = 1'b0;
#0 grp_k2c_affine_matmul_fu_263_ap_start_reg = 1'b0;
end

k2c_dot_2 grp_k2c_dot_2_fu_238(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dot_2_fu_238_ap_start),
    .ap_done(grp_k2c_dot_2_fu_238_ap_done),
    .ap_idle(grp_k2c_dot_2_fu_238_ap_idle),
    .ap_ready(grp_k2c_dot_2_fu_238_ap_ready),
    .C_array_address0(grp_k2c_dot_2_fu_238_C_array_address0),
    .C_array_ce0(grp_k2c_dot_2_fu_238_C_array_ce0),
    .C_array_we0(grp_k2c_dot_2_fu_238_C_array_we0),
    .C_array_d0(grp_k2c_dot_2_fu_238_C_array_d0),
    .C_array_q0(output_array_q0),
    .A_array_address0(grp_k2c_dot_2_fu_238_A_array_address0),
    .A_array_ce0(grp_k2c_dot_2_fu_238_A_array_ce0),
    .A_array_q0(input_array_q0),
    .A_ndim_read(input_ndim_read),
    .A_numel_read(input_numel_read),
    .A_shape_address0(grp_k2c_dot_2_fu_238_A_shape_address0),
    .A_shape_ce0(grp_k2c_dot_2_fu_238_A_shape_ce0),
    .A_shape_q0(input_shape_q0),
    .B_array_address0(grp_k2c_dot_2_fu_238_B_array_address0),
    .B_array_ce0(grp_k2c_dot_2_fu_238_B_array_ce0),
    .B_array_q0(kernel_array_q0),
    .B_ndim_read(kernel_ndim_read),
    .B_numel_read(kernel_numel_read),
    .B_shape_address0(grp_k2c_dot_2_fu_238_B_shape_address0),
    .B_shape_ce0(grp_k2c_dot_2_fu_238_B_shape_ce0),
    .B_shape_q0(kernel_shape_q0),
    .p_read4(tmp_9_reg_495)
);

k2c_affine_matmul grp_k2c_affine_matmul_fu_263(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_affine_matmul_fu_263_ap_start),
    .ap_done(grp_k2c_affine_matmul_fu_263_ap_done),
    .ap_idle(grp_k2c_affine_matmul_fu_263_ap_idle),
    .ap_ready(grp_k2c_affine_matmul_fu_263_ap_ready),
    .C_address0(grp_k2c_affine_matmul_fu_263_C_address0),
    .C_ce0(grp_k2c_affine_matmul_fu_263_C_ce0),
    .C_we0(grp_k2c_affine_matmul_fu_263_C_we0),
    .C_d0(grp_k2c_affine_matmul_fu_263_C_d0),
    .A_address0(grp_k2c_affine_matmul_fu_263_A_address0),
    .A_ce0(grp_k2c_affine_matmul_fu_263_A_ce0),
    .A_q0(input_array_q0),
    .B_address0(grp_k2c_affine_matmul_fu_263_B_address0),
    .B_ce0(grp_k2c_affine_matmul_fu_263_B_ce0),
    .B_q0(kernel_array_q0),
    .d_address0(grp_k2c_affine_matmul_fu_263_d_address0),
    .d_ce0(grp_k2c_affine_matmul_fu_263_d_ce0),
    .d_q0(bias_array_q0),
    .outrows(outrows_reg_573),
    .outcols(outcols_reg_579),
    .innerdim(innerdim_reg_590)
);

WebModel_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
WebModel_fadd_32ncud_U166(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_279_p0),
    .din1(grp_fu_279_p1),
    .ce(1'b1),
    .dout(grp_fu_279_p2)
);

WebModel_fdiv_32nqcK #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
WebModel_fdiv_32nqcK_U167(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1065353216),
    .din1(reg_307),
    .ce(1'b1),
    .dout(grp_fu_286_p2)
);

WebModel_fexp_32nrcU #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
WebModel_fexp_32nrcU_U168(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(grp_fu_291_p1),
    .ce(1'b1),
    .dout(grp_fu_291_p2)
);

WebModel_mul_64s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
WebModel_mul_64s_bkb_U169(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(outcols_reg_579),
    .din1(outrows_reg_573),
    .ce(grp_fu_424_ce),
    .dout(grp_fu_424_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_i2_fu_347_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state4) & (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
        end else if ((((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((tmp_i2_fu_347_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_i2_fu_347_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state12)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter23 <= ap_enable_reg_pp1_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter24 <= ap_enable_reg_pp1_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter25 <= ap_enable_reg_pp1_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter26 <= ap_enable_reg_pp1_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter27 <= ap_enable_reg_pp1_iter26;
        end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_i2_fu_347_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter27 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state44) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((grp_k2c_affine_matmul_fu_263_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state44)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state44);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter19 <= ap_enable_reg_pp2_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter20 <= ap_enable_reg_pp2_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter21 <= ap_enable_reg_pp2_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter22 <= ap_enable_reg_pp2_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter23 <= ap_enable_reg_pp2_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter24 <= ap_enable_reg_pp2_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter25 <= ap_enable_reg_pp2_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter26 <= ap_enable_reg_pp2_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter27 <= ap_enable_reg_pp2_iter26;
        end else if (((grp_k2c_affine_matmul_fu_263_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
            ap_enable_reg_pp2_iter27 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_affine_matmul_fu_263_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state42)) begin
            grp_k2c_affine_matmul_fu_263_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_affine_matmul_fu_263_ap_ready == 1'b1)) begin
            grp_k2c_affine_matmul_fu_263_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dot_2_fu_238_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_318_p2 == 1'd0))) begin
            grp_k2c_dot_2_fu_238_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dot_2_fu_238_ap_ready == 1'b1)) begin
            grp_k2c_dot_2_fu_238_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_i1_reg_192 <= i_25_fu_381_p2;
    end else if (((grp_k2c_dot_2_fu_238_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_i1_reg_192 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_i2_fu_347_p2 == 1'd0))) begin
        i_i4_reg_216 <= 15'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i5_fu_391_p2 == 1'd0))) begin
        i_i4_reg_216 <= i_52_fu_396_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (exitcond_i_fu_433_p2 == 1'd0))) begin
        i_i_reg_227 <= i_fu_438_p2;
    end else if (((grp_k2c_affine_matmul_fu_263_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
        i_i_reg_227 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i2_fu_347_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        j_i_reg_204 <= 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_i3_reg_524 == 1'd0))) begin
        j_i_reg_204 <= j_reg_528;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (exitcond_i_reg_600 == 1'd0))) begin
        reg_296 <= output_array_q1;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_i3_reg_524 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i5_reg_553 == 1'd0)))) begin
        reg_296 <= output_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_i3_reg_524 == 1'd0))) begin
        bias_array_load_reg_543 <= bias_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_i3_reg_524 <= exitcond_i3_fu_356_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        exitcond_i5_reg_553 <= exitcond_i5_fu_391_p2;
        exitcond_i5_reg_553_pp1_iter1_reg <= exitcond_i5_reg_553;
        output_array_addr_2_reg_562_pp1_iter1_reg <= output_array_addr_2_reg_562;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond_i5_reg_553_pp1_iter10_reg <= exitcond_i5_reg_553_pp1_iter9_reg;
        exitcond_i5_reg_553_pp1_iter11_reg <= exitcond_i5_reg_553_pp1_iter10_reg;
        exitcond_i5_reg_553_pp1_iter12_reg <= exitcond_i5_reg_553_pp1_iter11_reg;
        exitcond_i5_reg_553_pp1_iter13_reg <= exitcond_i5_reg_553_pp1_iter12_reg;
        exitcond_i5_reg_553_pp1_iter14_reg <= exitcond_i5_reg_553_pp1_iter13_reg;
        exitcond_i5_reg_553_pp1_iter15_reg <= exitcond_i5_reg_553_pp1_iter14_reg;
        exitcond_i5_reg_553_pp1_iter16_reg <= exitcond_i5_reg_553_pp1_iter15_reg;
        exitcond_i5_reg_553_pp1_iter17_reg <= exitcond_i5_reg_553_pp1_iter16_reg;
        exitcond_i5_reg_553_pp1_iter18_reg <= exitcond_i5_reg_553_pp1_iter17_reg;
        exitcond_i5_reg_553_pp1_iter19_reg <= exitcond_i5_reg_553_pp1_iter18_reg;
        exitcond_i5_reg_553_pp1_iter20_reg <= exitcond_i5_reg_553_pp1_iter19_reg;
        exitcond_i5_reg_553_pp1_iter21_reg <= exitcond_i5_reg_553_pp1_iter20_reg;
        exitcond_i5_reg_553_pp1_iter22_reg <= exitcond_i5_reg_553_pp1_iter21_reg;
        exitcond_i5_reg_553_pp1_iter23_reg <= exitcond_i5_reg_553_pp1_iter22_reg;
        exitcond_i5_reg_553_pp1_iter24_reg <= exitcond_i5_reg_553_pp1_iter23_reg;
        exitcond_i5_reg_553_pp1_iter25_reg <= exitcond_i5_reg_553_pp1_iter24_reg;
        exitcond_i5_reg_553_pp1_iter26_reg <= exitcond_i5_reg_553_pp1_iter25_reg;
        exitcond_i5_reg_553_pp1_iter2_reg <= exitcond_i5_reg_553_pp1_iter1_reg;
        exitcond_i5_reg_553_pp1_iter3_reg <= exitcond_i5_reg_553_pp1_iter2_reg;
        exitcond_i5_reg_553_pp1_iter4_reg <= exitcond_i5_reg_553_pp1_iter3_reg;
        exitcond_i5_reg_553_pp1_iter5_reg <= exitcond_i5_reg_553_pp1_iter4_reg;
        exitcond_i5_reg_553_pp1_iter6_reg <= exitcond_i5_reg_553_pp1_iter5_reg;
        exitcond_i5_reg_553_pp1_iter7_reg <= exitcond_i5_reg_553_pp1_iter6_reg;
        exitcond_i5_reg_553_pp1_iter8_reg <= exitcond_i5_reg_553_pp1_iter7_reg;
        exitcond_i5_reg_553_pp1_iter9_reg <= exitcond_i5_reg_553_pp1_iter8_reg;
        output_array_addr_2_reg_562_pp1_iter10_reg <= output_array_addr_2_reg_562_pp1_iter9_reg;
        output_array_addr_2_reg_562_pp1_iter11_reg <= output_array_addr_2_reg_562_pp1_iter10_reg;
        output_array_addr_2_reg_562_pp1_iter12_reg <= output_array_addr_2_reg_562_pp1_iter11_reg;
        output_array_addr_2_reg_562_pp1_iter13_reg <= output_array_addr_2_reg_562_pp1_iter12_reg;
        output_array_addr_2_reg_562_pp1_iter14_reg <= output_array_addr_2_reg_562_pp1_iter13_reg;
        output_array_addr_2_reg_562_pp1_iter15_reg <= output_array_addr_2_reg_562_pp1_iter14_reg;
        output_array_addr_2_reg_562_pp1_iter16_reg <= output_array_addr_2_reg_562_pp1_iter15_reg;
        output_array_addr_2_reg_562_pp1_iter17_reg <= output_array_addr_2_reg_562_pp1_iter16_reg;
        output_array_addr_2_reg_562_pp1_iter18_reg <= output_array_addr_2_reg_562_pp1_iter17_reg;
        output_array_addr_2_reg_562_pp1_iter19_reg <= output_array_addr_2_reg_562_pp1_iter18_reg;
        output_array_addr_2_reg_562_pp1_iter20_reg <= output_array_addr_2_reg_562_pp1_iter19_reg;
        output_array_addr_2_reg_562_pp1_iter21_reg <= output_array_addr_2_reg_562_pp1_iter20_reg;
        output_array_addr_2_reg_562_pp1_iter22_reg <= output_array_addr_2_reg_562_pp1_iter21_reg;
        output_array_addr_2_reg_562_pp1_iter23_reg <= output_array_addr_2_reg_562_pp1_iter22_reg;
        output_array_addr_2_reg_562_pp1_iter24_reg <= output_array_addr_2_reg_562_pp1_iter23_reg;
        output_array_addr_2_reg_562_pp1_iter25_reg <= output_array_addr_2_reg_562_pp1_iter24_reg;
        output_array_addr_2_reg_562_pp1_iter26_reg <= output_array_addr_2_reg_562_pp1_iter25_reg;
        output_array_addr_2_reg_562_pp1_iter2_reg <= output_array_addr_2_reg_562_pp1_iter1_reg;
        output_array_addr_2_reg_562_pp1_iter3_reg <= output_array_addr_2_reg_562_pp1_iter2_reg;
        output_array_addr_2_reg_562_pp1_iter4_reg <= output_array_addr_2_reg_562_pp1_iter3_reg;
        output_array_addr_2_reg_562_pp1_iter5_reg <= output_array_addr_2_reg_562_pp1_iter4_reg;
        output_array_addr_2_reg_562_pp1_iter6_reg <= output_array_addr_2_reg_562_pp1_iter5_reg;
        output_array_addr_2_reg_562_pp1_iter7_reg <= output_array_addr_2_reg_562_pp1_iter6_reg;
        output_array_addr_2_reg_562_pp1_iter8_reg <= output_array_addr_2_reg_562_pp1_iter7_reg;
        output_array_addr_2_reg_562_pp1_iter9_reg <= output_array_addr_2_reg_562_pp1_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        exitcond_i_reg_600 <= exitcond_i_fu_433_p2;
        exitcond_i_reg_600_pp2_iter1_reg <= exitcond_i_reg_600;
        output_array_addr_reg_609_pp2_iter1_reg <= output_array_addr_reg_609;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        exitcond_i_reg_600_pp2_iter10_reg <= exitcond_i_reg_600_pp2_iter9_reg;
        exitcond_i_reg_600_pp2_iter11_reg <= exitcond_i_reg_600_pp2_iter10_reg;
        exitcond_i_reg_600_pp2_iter12_reg <= exitcond_i_reg_600_pp2_iter11_reg;
        exitcond_i_reg_600_pp2_iter13_reg <= exitcond_i_reg_600_pp2_iter12_reg;
        exitcond_i_reg_600_pp2_iter14_reg <= exitcond_i_reg_600_pp2_iter13_reg;
        exitcond_i_reg_600_pp2_iter15_reg <= exitcond_i_reg_600_pp2_iter14_reg;
        exitcond_i_reg_600_pp2_iter16_reg <= exitcond_i_reg_600_pp2_iter15_reg;
        exitcond_i_reg_600_pp2_iter17_reg <= exitcond_i_reg_600_pp2_iter16_reg;
        exitcond_i_reg_600_pp2_iter18_reg <= exitcond_i_reg_600_pp2_iter17_reg;
        exitcond_i_reg_600_pp2_iter19_reg <= exitcond_i_reg_600_pp2_iter18_reg;
        exitcond_i_reg_600_pp2_iter20_reg <= exitcond_i_reg_600_pp2_iter19_reg;
        exitcond_i_reg_600_pp2_iter21_reg <= exitcond_i_reg_600_pp2_iter20_reg;
        exitcond_i_reg_600_pp2_iter22_reg <= exitcond_i_reg_600_pp2_iter21_reg;
        exitcond_i_reg_600_pp2_iter23_reg <= exitcond_i_reg_600_pp2_iter22_reg;
        exitcond_i_reg_600_pp2_iter24_reg <= exitcond_i_reg_600_pp2_iter23_reg;
        exitcond_i_reg_600_pp2_iter25_reg <= exitcond_i_reg_600_pp2_iter24_reg;
        exitcond_i_reg_600_pp2_iter26_reg <= exitcond_i_reg_600_pp2_iter25_reg;
        exitcond_i_reg_600_pp2_iter2_reg <= exitcond_i_reg_600_pp2_iter1_reg;
        exitcond_i_reg_600_pp2_iter3_reg <= exitcond_i_reg_600_pp2_iter2_reg;
        exitcond_i_reg_600_pp2_iter4_reg <= exitcond_i_reg_600_pp2_iter3_reg;
        exitcond_i_reg_600_pp2_iter5_reg <= exitcond_i_reg_600_pp2_iter4_reg;
        exitcond_i_reg_600_pp2_iter6_reg <= exitcond_i_reg_600_pp2_iter5_reg;
        exitcond_i_reg_600_pp2_iter7_reg <= exitcond_i_reg_600_pp2_iter6_reg;
        exitcond_i_reg_600_pp2_iter8_reg <= exitcond_i_reg_600_pp2_iter7_reg;
        exitcond_i_reg_600_pp2_iter9_reg <= exitcond_i_reg_600_pp2_iter8_reg;
        output_array_addr_reg_609_pp2_iter10_reg <= output_array_addr_reg_609_pp2_iter9_reg;
        output_array_addr_reg_609_pp2_iter11_reg <= output_array_addr_reg_609_pp2_iter10_reg;
        output_array_addr_reg_609_pp2_iter12_reg <= output_array_addr_reg_609_pp2_iter11_reg;
        output_array_addr_reg_609_pp2_iter13_reg <= output_array_addr_reg_609_pp2_iter12_reg;
        output_array_addr_reg_609_pp2_iter14_reg <= output_array_addr_reg_609_pp2_iter13_reg;
        output_array_addr_reg_609_pp2_iter15_reg <= output_array_addr_reg_609_pp2_iter14_reg;
        output_array_addr_reg_609_pp2_iter16_reg <= output_array_addr_reg_609_pp2_iter15_reg;
        output_array_addr_reg_609_pp2_iter17_reg <= output_array_addr_reg_609_pp2_iter16_reg;
        output_array_addr_reg_609_pp2_iter18_reg <= output_array_addr_reg_609_pp2_iter17_reg;
        output_array_addr_reg_609_pp2_iter19_reg <= output_array_addr_reg_609_pp2_iter18_reg;
        output_array_addr_reg_609_pp2_iter20_reg <= output_array_addr_reg_609_pp2_iter19_reg;
        output_array_addr_reg_609_pp2_iter21_reg <= output_array_addr_reg_609_pp2_iter20_reg;
        output_array_addr_reg_609_pp2_iter22_reg <= output_array_addr_reg_609_pp2_iter21_reg;
        output_array_addr_reg_609_pp2_iter23_reg <= output_array_addr_reg_609_pp2_iter22_reg;
        output_array_addr_reg_609_pp2_iter24_reg <= output_array_addr_reg_609_pp2_iter23_reg;
        output_array_addr_reg_609_pp2_iter25_reg <= output_array_addr_reg_609_pp2_iter24_reg;
        output_array_addr_reg_609_pp2_iter26_reg <= output_array_addr_reg_609_pp2_iter25_reg;
        output_array_addr_reg_609_pp2_iter2_reg <= output_array_addr_reg_609_pp2_iter1_reg;
        output_array_addr_reg_609_pp2_iter3_reg <= output_array_addr_reg_609_pp2_iter2_reg;
        output_array_addr_reg_609_pp2_iter4_reg <= output_array_addr_reg_609_pp2_iter3_reg;
        output_array_addr_reg_609_pp2_iter5_reg <= output_array_addr_reg_609_pp2_iter4_reg;
        output_array_addr_reg_609_pp2_iter6_reg <= output_array_addr_reg_609_pp2_iter5_reg;
        output_array_addr_reg_609_pp2_iter7_reg <= output_array_addr_reg_609_pp2_iter6_reg;
        output_array_addr_reg_609_pp2_iter8_reg <= output_array_addr_reg_609_pp2_iter7_reg;
        output_array_addr_reg_609_pp2_iter9_reg <= output_array_addr_reg_609_pp2_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_318_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        icmp_reg_500 <= icmp_fu_341_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        innerdim_reg_590 <= kernel_shape_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_528 <= j_fu_361_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        outcols_reg_579 <= kernel_shape_q0;
        outrows_reg_573 <= outrows_fu_417_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_i3_fu_356_p2 == 1'd0))) begin
        output_array_addr_1_reg_538 <= tmp_i_cast_fu_376_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i5_fu_391_p2 == 1'd0))) begin
        output_array_addr_2_reg_562 <= i_i4_cast_fu_386_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (exitcond_i_fu_433_p2 == 1'd0))) begin
        output_array_addr_reg_609 <= i_i_cast_fu_428_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_k2c_affine_matmul_fu_263_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
        outsize_reg_595 <= grp_fu_424_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter9 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (exitcond_i_reg_600_pp2_iter8_reg == 1'd0)) | ((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i5_reg_553_pp1_iter8_reg == 1'd0)))) begin
        reg_302 <= grp_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter14 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (exitcond_i_reg_600_pp2_iter13_reg == 1'd0)) | ((ap_enable_reg_pp1_iter14 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i5_reg_553_pp1_iter13_reg == 1'd0)))) begin
        reg_307 <= grp_fu_279_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter26 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (exitcond_i_reg_600_pp2_iter25_reg == 1'd0)) | ((ap_enable_reg_pp1_iter26 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i5_reg_553_pp1_iter25_reg == 1'd0)))) begin
        reg_312 <= grp_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i2_fu_347_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_67_reg_519 <= tmp_67_fu_352_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_318_p2 == 1'd0))) begin
        tmp_9_reg_495 <= tmp_9_fu_324_p2;
    end
end

always @ (*) begin
    if ((exitcond_i3_fu_356_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i5_fu_391_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_433_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state44 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state44 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter27 == 1'b0) & (ap_enable_reg_pp1_iter25 == 1'b0) & (ap_enable_reg_pp1_iter24 == 1'b0) & (ap_enable_reg_pp1_iter23 == 1'b0) & (ap_enable_reg_pp1_iter22 == 1'b0) & (ap_enable_reg_pp1_iter21 == 1'b0) & (ap_enable_reg_pp1_iter20 == 1'b0) & (ap_enable_reg_pp1_iter19 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter26 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter27 == 1'b0) & (ap_enable_reg_pp2_iter25 == 1'b0) & (ap_enable_reg_pp2_iter24 == 1'b0) & (ap_enable_reg_pp2_iter23 == 1'b0) & (ap_enable_reg_pp2_iter22 == 1'b0) & (ap_enable_reg_pp2_iter21 == 1'b0) & (ap_enable_reg_pp2_iter20 == 1'b0) & (ap_enable_reg_pp2_iter19 == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b0) & (ap_enable_reg_pp2_iter17 == 1'b0) & (ap_enable_reg_pp2_iter16 == 1'b0) & (ap_enable_reg_pp2_iter15 == 1'b0) & (ap_enable_reg_pp2_iter13 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter26 == 1'b0) & (ap_enable_reg_pp2_iter14 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_i3_reg_524 == 1'd0))) begin
        ap_phi_mux_j_i_phi_fu_208_p4 = j_reg_528;
    end else begin
        ap_phi_mux_j_i_phi_fu_208_p4 = j_i_reg_204;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_array_address0 = ap_phi_mux_j_i_phi_fu_208_p4;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        bias_array_address0 = grp_k2c_affine_matmul_fu_263_d_address0;
    end else begin
        bias_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        bias_array_ce0 = grp_k2c_affine_matmul_fu_263_d_ce0;
    end else begin
        bias_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter10 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter10 == 1'b1)))) begin
        grp_fu_279_p0 = reg_302;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_279_p0 = output_array_q0;
    end else begin
        grp_fu_279_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter10 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter10 == 1'b1)))) begin
        grp_fu_279_p1 = 32'd1065353216;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_279_p1 = bias_array_load_reg_543;
    end else begin
        grp_fu_279_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        grp_fu_291_p1 = tmp_i_fu_454_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grp_fu_291_p1 = tmp_i1_fu_412_p1;
    end else begin
        grp_fu_291_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | ((grp_k2c_affine_matmul_fu_263_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43)))) begin
        grp_fu_424_ce = 1'b1;
    end else begin
        grp_fu_424_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        input_array_address0 = grp_k2c_affine_matmul_fu_263_A_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_array_address0 = grp_k2c_dot_2_fu_238_A_array_address0;
    end else begin
        input_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        input_array_ce0 = grp_k2c_affine_matmul_fu_263_A_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_array_ce0 = grp_k2c_dot_2_fu_238_A_array_ce0;
    end else begin
        input_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_318_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        input_shape_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_shape_address0 = grp_k2c_dot_2_fu_238_A_shape_address0;
    end else begin
        input_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_fu_318_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        input_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_shape_ce0 = grp_k2c_dot_2_fu_238_A_shape_ce0;
    end else begin
        input_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        kernel_array_address0 = grp_k2c_affine_matmul_fu_263_B_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_array_address0 = grp_k2c_dot_2_fu_238_B_array_address0;
    end else begin
        kernel_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        kernel_array_ce0 = grp_k2c_affine_matmul_fu_263_B_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_array_ce0 = grp_k2c_dot_2_fu_238_B_array_ce0;
    end else begin
        kernel_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        kernel_shape_address0 = 64'd0;
    end else if (((tmp_fu_318_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_shape_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_shape_address0 = grp_k2c_dot_2_fu_238_B_shape_address0;
    end else begin
        kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((tmp_fu_318_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_shape_ce0 = grp_k2c_dot_2_fu_238_B_shape_ce0;
    end else begin
        kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter27 == 1'b1))) begin
        output_array_address0 = output_array_addr_reg_609_pp2_iter26_reg;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        output_array_address0 = i_i4_cast_fu_386_p1;
    end else if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output_array_address0 = output_array_addr_1_reg_538;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        output_array_address0 = grp_k2c_affine_matmul_fu_263_C_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_address0 = grp_k2c_dot_2_fu_238_C_array_address0;
    end else begin
        output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        output_array_address1 = i_i_cast_fu_428_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter27 == 1'b1))) begin
        output_array_address1 = output_array_addr_2_reg_562_pp1_iter26_reg;
    end else begin
        output_array_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp2_iter27 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        output_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        output_array_ce0 = grp_k2c_affine_matmul_fu_263_C_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_ce0 = grp_k2c_dot_2_fu_238_C_array_ce0;
    end else begin
        output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter27 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        output_array_ce1 = 1'b1;
    end else begin
        output_array_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter27 == 1'b1))) begin
        output_array_d0 = reg_312;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_array_d0 = grp_fu_279_p2;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        output_array_d0 = grp_k2c_affine_matmul_fu_263_C_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_d0 = grp_k2c_dot_2_fu_238_C_array_d0;
    end else begin
        output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter27 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (exitcond_i_reg_600_pp2_iter26_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_i3_reg_524 == 1'd0)))) begin
        output_array_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        output_array_we0 = grp_k2c_affine_matmul_fu_263_C_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_we0 = grp_k2c_dot_2_fu_238_C_array_we0;
    end else begin
        output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter27 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i5_reg_553_pp1_iter26_reg == 1'd0))) begin
        output_array_we1 = 1'b1;
    end else begin
        output_array_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((tmp_fu_318_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_318_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_k2c_dot_2_fu_238_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (tmp_i2_fu_347_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_i3_fu_356_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_i3_fu_356_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_i5_fu_391_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter26 == 1'b0) & (ap_enable_reg_pp1_iter27 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter26 == 1'b0) & (ap_enable_reg_pp1_iter27 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_i5_fu_391_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            if (((grp_k2c_affine_matmul_fu_263_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (exitcond_i_fu_433_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter26 == 1'b0) & (ap_enable_reg_pp2_iter27 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter26 == 1'b0) & (ap_enable_reg_pp2_iter27 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (exitcond_i_fu_433_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd16];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp1_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp1_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp2_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp2_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp2_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp2_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp2_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp2_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp2_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp2_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp2_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp2_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp2_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp2_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp2_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp2_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp2_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp2_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign exitcond_i3_fu_356_p2 = ((ap_phi_mux_j_i_phi_fu_208_p4 == bias_numel_read) ? 1'b1 : 1'b0);

assign exitcond_i5_fu_391_p2 = ((i_i4_cast_fu_386_p1 == output_numel_read) ? 1'b1 : 1'b0);

assign exitcond_i_fu_433_p2 = ((i_i_cast_fu_428_p1 == outsize_reg_595) ? 1'b1 : 1'b0);

assign grp_k2c_affine_matmul_fu_263_ap_start = grp_k2c_affine_matmul_fu_263_ap_start_reg;

assign grp_k2c_dot_2_fu_238_ap_start = grp_k2c_dot_2_fu_238_ap_start_reg;

assign i_25_fu_381_p2 = (i_i1_reg_192 + bias_numel_read);

assign i_52_fu_396_p2 = (i_i4_reg_216 + 15'd1);

assign i_fu_438_p2 = (i_i_reg_227 + 15'd1);

assign i_i4_cast_fu_386_p1 = i_i4_reg_216;

assign i_i_cast_fu_428_p1 = i_i_reg_227;

assign icmp_fu_341_p2 = ((tmp_66_fu_331_p4 != 63'd0) ? 1'b1 : 1'b0);

assign j_fu_361_p2 = (ap_phi_mux_j_i_phi_fu_208_p4 + 64'd1);

assign output_array_d1 = reg_312;

assign outrows_fu_417_p3 = ((icmp_reg_500[0:0] === 1'b1) ? input_shape_q0 : 64'd1);

assign tmp_66_fu_331_p4 = {{input_ndim_read[63:1]}};

assign tmp_67_fu_352_p1 = i_i1_reg_192[15:0];

assign tmp_68_fu_367_p1 = ap_phi_mux_j_i_phi_fu_208_p4[15:0];

assign tmp_9_fu_324_p2 = ($signed(input_ndim_read) + $signed(64'd18446744073709551615));

assign tmp_fu_318_p2 = ((input_ndim_read < 64'd3) ? 1'b1 : 1'b0);

assign tmp_i1_fu_412_p1 = tmp_neg_i1_fu_406_p2;

assign tmp_i2_fu_347_p2 = ((i_i1_reg_192 < output_numel_read) ? 1'b1 : 1'b0);

assign tmp_i_52_fu_371_p2 = (tmp_68_fu_367_p1 + tmp_67_reg_519);

assign tmp_i_cast_fu_376_p1 = tmp_i_52_fu_371_p2;

assign tmp_i_fu_454_p1 = tmp_neg_i_fu_448_p2;

assign tmp_neg_i1_fu_406_p2 = (tmp_to_int_i9_fu_402_p1 ^ 32'd2147483648);

assign tmp_neg_i_fu_448_p2 = (tmp_to_int_i_fu_444_p1 ^ 32'd2147483648);

assign tmp_to_int_i9_fu_402_p1 = reg_296;

assign tmp_to_int_i_fu_444_p1 = reg_296;

endmodule //k2c_dense
