// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _k2c_affine_matmul_1_HH_
#define _k2c_affine_matmul_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "WebModel_fadd_32ncud.h"
#include "WebModel_fmul_32ndEe.h"
#include "WebModel_mul_64s_bkb.h"
#include "WebModel_mul_64nseOg.h"
#include "WebModel_mux_464_kbM.h"
#include "WebModel_mul_mul_mb6.h"

namespace ap_rtl {

struct k2c_affine_matmul_1 : public sc_module {
    // Port declarations 31
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<15> > C_address0;
    sc_out< sc_logic > C_ce0;
    sc_out< sc_logic > C_we0;
    sc_out< sc_lv<32> > C_d0;
    sc_out< sc_lv<15> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_in< sc_lv<32> > A_q0;
    sc_out< sc_lv<13> > B_0_address0;
    sc_out< sc_logic > B_0_ce0;
    sc_in< sc_lv<32> > B_0_q0;
    sc_out< sc_lv<13> > B_1_address0;
    sc_out< sc_logic > B_1_ce0;
    sc_in< sc_lv<32> > B_1_q0;
    sc_out< sc_lv<13> > B_2_address0;
    sc_out< sc_logic > B_2_ce0;
    sc_in< sc_lv<32> > B_2_q0;
    sc_out< sc_lv<13> > B_3_address0;
    sc_out< sc_logic > B_3_ce0;
    sc_in< sc_lv<32> > B_3_q0;
    sc_out< sc_lv<15> > d_address0;
    sc_out< sc_logic > d_ce0;
    sc_in< sc_lv<32> > d_q0;
    sc_in< sc_lv<64> > outrows;
    sc_in< sc_lv<64> > outcols;
    sc_in< sc_lv<64> > innerdim;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    k2c_affine_matmul_1(sc_module_name name);
    SC_HAS_PROCESS(k2c_affine_matmul_1);

    ~k2c_affine_matmul_1();

    sc_trace_file* mVcdFile;

    WebModel_fadd_32ncud<1,5,32,32,32>* WebModel_fadd_32ncud_U50;
    WebModel_fmul_32ndEe<1,3,32,32,32>* WebModel_fmul_32ndEe_U51;
    WebModel_mul_64s_bkb<1,2,64,64,64>* WebModel_mul_64s_bkb_U52;
    WebModel_mul_64nseOg<1,2,64,64,128>* WebModel_mul_64nseOg_U53;
    WebModel_mux_464_kbM<1,1,32,32,32,32,64,32>* WebModel_mux_464_kbM_U54;
    WebModel_mul_mul_mb6<1,1,16,16,16>* WebModel_mul_mul_mb6_U55;
    WebModel_mul_mul_mb6<1,1,16,16,16>* WebModel_mul_mul_mb6_U56;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > sum1_reg_223;
    sc_signal< sc_lv<64> > k_reg_234;
    sc_signal< sc_lv<64> > phi_mul_reg_245;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > grp_fu_265_p2;
    sc_signal< sc_lv<64> > tmp_reg_470;
    sc_signal< sc_lv<15> > p_1_fu_281_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond3_fu_276_p2;
    sc_signal< sc_lv<16> > tmp_69_fu_299_p1;
    sc_signal< sc_lv<16> > tmp_69_reg_493;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<16> > tmp_70_fu_302_p1;
    sc_signal< sc_lv<16> > tmp_70_reg_498;
    sc_signal< sc_lv<128> > grp_fu_293_p2;
    sc_signal< sc_lv<128> > bound_reg_503;
    sc_signal< sc_lv<128> > indvar_flatten_next_fu_310_p2;
    sc_signal< sc_lv<128> > indvar_flatten_next_reg_511;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond1_fu_316_p2;
    sc_signal< sc_lv<1> > exitcond1_reg_516;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_305_p2;
    sc_signal< sc_lv<64> > j_cast_mid2_v_fu_327_p3;
    sc_signal< sc_lv<64> > j_cast_mid2_v_reg_521;
    sc_signal< sc_lv<16> > tmp_71_fu_336_p1;
    sc_signal< sc_lv<16> > tmp_71_reg_527;
    sc_signal< sc_lv<64> > i_mid2_fu_340_p3;
    sc_signal< sc_lv<64> > i_mid2_reg_537;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<16> > outrowidx_fu_439_p2;
    sc_signal< sc_lv<16> > outrowidx_reg_542;
    sc_signal< sc_lv<16> > inneridx_fu_444_p2;
    sc_signal< sc_lv<16> > inneridx_reg_547;
    sc_signal< sc_lv<1> > exitcond_fu_351_p2;
    sc_signal< sc_lv<1> > exitcond_reg_557;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_reg_557_pp0_iter1_reg;
    sc_signal< sc_lv<64> > k_2_fu_356_p2;
    sc_signal< sc_lv<64> > k_2_reg_561;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<64> > next_mul_fu_376_p2;
    sc_signal< sc_lv<64> > next_mul_reg_571;
    sc_signal< sc_lv<2> > tmp_74_fu_386_p1;
    sc_signal< sc_lv<2> > tmp_74_reg_576;
    sc_signal< sc_lv<32> > A_load_reg_601;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state13_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > tmp_31_fu_411_p6;
    sc_signal< sc_lv<32> > tmp_31_reg_606;
    sc_signal< sc_lv<32> > grp_fu_261_p2;
    sc_signal< sc_lv<32> > tmp_11_reg_611;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state11_pp0_stage4_iter0;
    sc_signal< bool > ap_block_state16_pp0_stage4_iter1;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_lv<32> > grp_fu_256_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<64> > i_53_fu_434_p2;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state7;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< sc_lv<15> > p_reg_178;
    sc_signal< sc_lv<128> > indvar_flatten_reg_189;
    sc_signal< sc_lv<64> > j_reg_200;
    sc_signal< sc_lv<64> > i_reg_211;
    sc_signal< sc_lv<64> > ap_phi_mux_k_phi_fu_238_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > ap_phi_mux_phi_mul_phi_fu_249_p4;
    sc_signal< sc_lv<64> > p_cast_fu_271_p1;
    sc_signal< sc_lv<64> > sum7_cast_fu_371_p1;
    sc_signal< sc_lv<64> > newIndex_cast_fu_400_p1;
    sc_signal< sc_lv<64> > sum4_cast_fu_429_p1;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > cast_fu_287_p0;
    sc_signal< sc_lv<64> > cast2_fu_290_p0;
    sc_signal< sc_lv<64> > grp_fu_293_p0;
    sc_signal< sc_lv<64> > grp_fu_293_p1;
    sc_signal< sc_lv<64> > tmp_69_fu_299_p0;
    sc_signal< sc_lv<64> > exitcond1_fu_316_p1;
    sc_signal< sc_lv<64> > j_s_fu_321_p2;
    sc_signal< sc_lv<16> > tmp_73_fu_362_p1;
    sc_signal< sc_lv<16> > sum7_fu_366_p2;
    sc_signal< sc_lv<64> > next_mul_fu_376_p0;
    sc_signal< sc_lv<64> > sum2_fu_381_p2;
    sc_signal< sc_lv<14> > newIndex_fu_390_p4;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > tmp_31_fu_411_p5;
    sc_signal< sc_lv<16> > sum4_fu_425_p2;
    sc_signal< sc_lv<16> > tmp_72_fu_347_p1;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_state9_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state14_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_state10_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state15_pp0_stage3_iter1;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<128> > grp_fu_293_p00;
    sc_signal< sc_lv<128> > grp_fu_293_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_state4;
    static const sc_lv<12> ap_ST_fsm_state5;
    static const sc_lv<12> ap_ST_fsm_state6;
    static const sc_lv<12> ap_ST_fsm_pp0_stage0;
    static const sc_lv<12> ap_ST_fsm_pp0_stage1;
    static const sc_lv<12> ap_ST_fsm_pp0_stage2;
    static const sc_lv<12> ap_ST_fsm_pp0_stage3;
    static const sc_lv<12> ap_ST_fsm_pp0_stage4;
    static const sc_lv<12> ap_ST_fsm_state17;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<128> ap_const_lv128_lc_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<15> ap_const_lv15_1;
    static const sc_lv<128> ap_const_lv128_lc_2;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<32> ap_const_lv32_F;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_B_0_address0();
    void thread_B_0_ce0();
    void thread_B_1_address0();
    void thread_B_1_ce0();
    void thread_B_2_address0();
    void thread_B_2_ce0();
    void thread_B_3_address0();
    void thread_B_3_ce0();
    void thread_C_address0();
    void thread_C_ce0();
    void thread_C_d0();
    void thread_C_we0();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_state10_pp0_stage3_iter0();
    void thread_ap_block_state11_pp0_stage4_iter0();
    void thread_ap_block_state12_pp0_stage0_iter1();
    void thread_ap_block_state13_pp0_stage1_iter1();
    void thread_ap_block_state14_pp0_stage2_iter1();
    void thread_ap_block_state15_pp0_stage3_iter1();
    void thread_ap_block_state16_pp0_stage4_iter1();
    void thread_ap_block_state7_pp0_stage0_iter0();
    void thread_ap_block_state8_pp0_stage1_iter0();
    void thread_ap_block_state9_pp0_stage2_iter0();
    void thread_ap_condition_pp0_exit_iter0_state7();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_k_phi_fu_238_p4();
    void thread_ap_phi_mux_phi_mul_phi_fu_249_p4();
    void thread_ap_ready();
    void thread_cast2_fu_290_p0();
    void thread_cast_fu_287_p0();
    void thread_d_address0();
    void thread_d_ce0();
    void thread_exitcond1_fu_316_p1();
    void thread_exitcond1_fu_316_p2();
    void thread_exitcond3_fu_276_p2();
    void thread_exitcond_flatten_fu_305_p2();
    void thread_exitcond_fu_351_p2();
    void thread_grp_fu_293_p0();
    void thread_grp_fu_293_p00();
    void thread_grp_fu_293_p1();
    void thread_grp_fu_293_p10();
    void thread_i_53_fu_434_p2();
    void thread_i_mid2_fu_340_p3();
    void thread_indvar_flatten_next_fu_310_p2();
    void thread_j_cast_mid2_v_fu_327_p3();
    void thread_j_s_fu_321_p2();
    void thread_k_2_fu_356_p2();
    void thread_newIndex_cast_fu_400_p1();
    void thread_newIndex_fu_390_p4();
    void thread_next_mul_fu_376_p0();
    void thread_next_mul_fu_376_p2();
    void thread_p_1_fu_281_p2();
    void thread_p_cast_fu_271_p1();
    void thread_sum2_fu_381_p2();
    void thread_sum4_cast_fu_429_p1();
    void thread_sum4_fu_425_p2();
    void thread_sum7_cast_fu_371_p1();
    void thread_sum7_fu_366_p2();
    void thread_tmp_31_fu_411_p5();
    void thread_tmp_69_fu_299_p0();
    void thread_tmp_69_fu_299_p1();
    void thread_tmp_70_fu_302_p1();
    void thread_tmp_71_fu_336_p1();
    void thread_tmp_72_fu_347_p1();
    void thread_tmp_73_fu_362_p1();
    void thread_tmp_74_fu_386_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
