// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __WebModel_dense_69xdS_H__
#define __WebModel_dense_69xdS_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct WebModel_dense_69xdS_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 64;
  static const unsigned AddressWidth = 6;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(WebModel_dense_69xdS_ram) {
        ram[0] = "0b10111110110100011010001011010110";
        ram[1] = "0b10111111010000010010001100101111";
        ram[2] = "0b10111110100011011100111011010001";
        ram[3] = "0b10111110111100001110110001011111";
        ram[4] = "0b10111110110110001110111110010110";
        ram[5] = "0b10111110101011000011001111011111";
        ram[6] = "0b10111100001011000000001010101011";
        ram[7] = "0b10111110110010000011011010111000";
        ram[8] = "0b10111101100010011100011110111000";
        ram[9] = "0b10111110110010111101100100011100";
        ram[10] = "0b10111111000101010011000011010100";
        ram[11] = "0b10111110110011100101101000100000";
        ram[12] = "0b10111110011011000111001100010101";
        ram[13] = "0b10111110100101101010011101001000";
        ram[14] = "0b10111110110010110000000011001001";
        ram[15] = "0b10111110101011101110101001010110";
        ram[16] = "0b10111110110000101010011011101101";
        ram[17] = "0b10111110011111010110101000011111";
        ram[18] = "0b10111100000000011110010001010001";
        ram[19] = "0b00111101000000111111100001110000";
        ram[20] = "0b10111111000111001001000010011001";
        ram[21] = "0b10111111000010101110100101101100";
        ram[22] = "0b10111110110101111001000000011100";
        ram[23] = "0b00111110000101111110101011101111";
        ram[24] = "0b00111011110011101001100011010000";
        ram[25] = "0b10111110111011000001100000110110";
        ram[26] = "0b10111110111000110110100100010011";
        ram[27] = "0b10111110001111011110010101111110";
        ram[28] = "0b00111101110100100111000011100001";
        ram[29] = "0b10111111000000000000001111100100";
        ram[30] = "0b10111110101110111010101010001111";
        ram[31] = "0b00111110000011000110001110010010";
        ram[32] = "0b10111101111111110111010011010010";
        ram[33] = "0b10111110100110111001001011101000";
        ram[34] = "0b10111110100100100011000111111110";
        ram[35] = "0b00111110000100100010100110001111";
        ram[36] = "0b10111110000011001001010011001011";
        ram[37] = "0b10111101111100001111001001111101";
        ram[38] = "0b10111111000011000010010011000111";
        ram[39] = "0b10111111001001100101001011010111";
        ram[40] = "0b10111110100011110100110001111001";
        ram[41] = "0b10111110011111001100001010000000";
        ram[42] = "0b10111110101010000101110011101001";
        ram[43] = "0b10111111010000011110000100100000";
        ram[44] = "0b10111110100011000101001100101010";
        ram[45] = "0b10111110100111110101001001011101";
        ram[46] = "0b10111101001000110101010011001110";
        ram[47] = "0b10111110101100111100010100000010";
        ram[48] = "0b10111111000110101010001010110100";
        ram[49] = "0b10111110100010100001011001000000";
        ram[50] = "0b10111110100001001010010101100010";
        ram[51] = "0b10111110111100101001111111011010";
        ram[52] = "0b10111110110101010001011100001110";
        ram[53] = "0b10111110010111101001000100110010";
        ram[54] = "0b10111110100110111111100110011000";
        ram[55] = "0b10111100111110100010100101101001";
        ram[56] = "0b10111110100011101101110010100000";
        ram[57] = "0b10111110010001001001011111010110";
        ram[58] = "0b10111110010111011100011011010111";
        ram[59] = "0b10111110101010101111110111100101";
        ram[60] = "0b00111101101111000101101001111001";
        ram[61] = "0b10111110001001101000001100001110";
        ram[62] = "0b10111110100000001010011100111010";
        ram[63] = "0b10111110001110011111011011000010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(WebModel_dense_69xdS) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 64;
static const unsigned AddressWidth = 6;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


WebModel_dense_69xdS_ram* meminst;


SC_CTOR(WebModel_dense_69xdS) {
meminst = new WebModel_dense_69xdS_ram("WebModel_dense_69xdS_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~WebModel_dense_69xdS() {
    delete meminst;
}


};//endmodule
#endif
