-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity k2c_dense is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_array_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    output_array_ce0 : OUT STD_LOGIC;
    output_array_we0 : OUT STD_LOGIC;
    output_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_array_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
    output_array_ce1 : OUT STD_LOGIC;
    output_array_we1 : OUT STD_LOGIC;
    output_array_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_array_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
    input_array_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    input_array_ce0 : OUT STD_LOGIC;
    input_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
    input_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
    input_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_shape_ce0 : OUT STD_LOGIC;
    input_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    kernel_array_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    kernel_array_ce0 : OUT STD_LOGIC;
    kernel_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
    kernel_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
    kernel_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    kernel_shape_ce0 : OUT STD_LOGIC;
    kernel_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    bias_array_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    bias_array_ce0 : OUT STD_LOGIC;
    bias_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    bias_numel_read : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of k2c_dense is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal j_i_reg_204 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_i4_reg_216 : STD_LOGIC_VECTOR (14 downto 0);
    signal i_i_reg_227 : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_296 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state6_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal exitcond_i3_reg_524 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_state12_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter9 : BOOLEAN;
    signal ap_block_state22_pp1_stage0_iter10 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter11 : BOOLEAN;
    signal ap_block_state24_pp1_stage0_iter12 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter13 : BOOLEAN;
    signal ap_block_state26_pp1_stage0_iter14 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter15 : BOOLEAN;
    signal ap_block_state28_pp1_stage0_iter16 : BOOLEAN;
    signal ap_block_state29_pp1_stage0_iter17 : BOOLEAN;
    signal ap_block_state30_pp1_stage0_iter18 : BOOLEAN;
    signal ap_block_state31_pp1_stage0_iter19 : BOOLEAN;
    signal ap_block_state32_pp1_stage0_iter20 : BOOLEAN;
    signal ap_block_state33_pp1_stage0_iter21 : BOOLEAN;
    signal ap_block_state34_pp1_stage0_iter22 : BOOLEAN;
    signal ap_block_state35_pp1_stage0_iter23 : BOOLEAN;
    signal ap_block_state36_pp1_stage0_iter24 : BOOLEAN;
    signal ap_block_state37_pp1_stage0_iter25 : BOOLEAN;
    signal ap_block_state38_pp1_stage0_iter26 : BOOLEAN;
    signal ap_block_state39_pp1_stage0_iter27 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal exitcond_i5_reg_553 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_state44_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state45_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state46_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state47_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state48_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_state49_pp2_stage0_iter5 : BOOLEAN;
    signal ap_block_state50_pp2_stage0_iter6 : BOOLEAN;
    signal ap_block_state51_pp2_stage0_iter7 : BOOLEAN;
    signal ap_block_state52_pp2_stage0_iter8 : BOOLEAN;
    signal ap_block_state53_pp2_stage0_iter9 : BOOLEAN;
    signal ap_block_state54_pp2_stage0_iter10 : BOOLEAN;
    signal ap_block_state55_pp2_stage0_iter11 : BOOLEAN;
    signal ap_block_state56_pp2_stage0_iter12 : BOOLEAN;
    signal ap_block_state57_pp2_stage0_iter13 : BOOLEAN;
    signal ap_block_state58_pp2_stage0_iter14 : BOOLEAN;
    signal ap_block_state59_pp2_stage0_iter15 : BOOLEAN;
    signal ap_block_state60_pp2_stage0_iter16 : BOOLEAN;
    signal ap_block_state61_pp2_stage0_iter17 : BOOLEAN;
    signal ap_block_state62_pp2_stage0_iter18 : BOOLEAN;
    signal ap_block_state63_pp2_stage0_iter19 : BOOLEAN;
    signal ap_block_state64_pp2_stage0_iter20 : BOOLEAN;
    signal ap_block_state65_pp2_stage0_iter21 : BOOLEAN;
    signal ap_block_state66_pp2_stage0_iter22 : BOOLEAN;
    signal ap_block_state67_pp2_stage0_iter23 : BOOLEAN;
    signal ap_block_state68_pp2_stage0_iter24 : BOOLEAN;
    signal ap_block_state69_pp2_stage0_iter25 : BOOLEAN;
    signal ap_block_state70_pp2_stage0_iter26 : BOOLEAN;
    signal ap_block_state71_pp2_stage0_iter27 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal exitcond_i_reg_600 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_291_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_302 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal exitcond_i5_reg_553_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp2_iter9 : STD_LOGIC := '0';
    signal exitcond_i_reg_600_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_279_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_307 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter14 : STD_LOGIC := '0';
    signal exitcond_i5_reg_553_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp2_iter14 : STD_LOGIC := '0';
    signal exitcond_i_reg_600_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_286_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_312 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter26 : STD_LOGIC := '0';
    signal exitcond_i5_reg_553_pp1_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp2_iter26 : STD_LOGIC := '0';
    signal exitcond_i_reg_600_pp2_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_324_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_reg_495 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_500 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_67_fu_352_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_67_reg_519 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond_i3_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal j_fu_361_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_reg_528 : STD_LOGIC_VECTOR (63 downto 0);
    signal output_array_addr_1_reg_538 : STD_LOGIC_VECTOR (14 downto 0);
    signal bias_array_load_reg_543 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state5_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal i_25_fu_381_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal exitcond_i5_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i5_reg_553_pp1_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_52_fu_396_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal output_array_addr_2_reg_562 : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter1_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter2_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter3_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter4_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter5_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter6_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter7_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter8_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter9_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter10_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter11_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter12_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter13_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter14_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter15_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter16_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter17_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter18_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter19_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter20_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter21_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter22_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter23_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter24_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter25_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_2_reg_562_pp1_iter26_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_i1_fu_412_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal outrows_fu_417_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal outrows_reg_573 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal outcols_reg_579 : STD_LOGIC_VECTOR (63 downto 0);
    signal innerdim_reg_590 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal grp_fu_424_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal outsize_reg_595 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal grp_k2c_affine_matmul_fu_263_ap_idle : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_263_ap_ready : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_263_ap_done : STD_LOGIC;
    signal exitcond_i_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_600_pp2_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_438_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal output_array_addr_reg_609 : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter1_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter2_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter3_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter4_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter5_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter6_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter7_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter8_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter9_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter10_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter11_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter12_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter13_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter14_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter15_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter16_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter17_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter18_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter19_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter20_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter21_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter22_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter23_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter24_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter25_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_609_pp2_iter26_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_i_fu_454_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state9_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state12 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter27 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state44 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter27 : STD_LOGIC := '0';
    signal grp_k2c_dot_2_fu_238_ap_start : STD_LOGIC;
    signal grp_k2c_dot_2_fu_238_ap_done : STD_LOGIC;
    signal grp_k2c_dot_2_fu_238_ap_idle : STD_LOGIC;
    signal grp_k2c_dot_2_fu_238_ap_ready : STD_LOGIC;
    signal grp_k2c_dot_2_fu_238_C_array_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_k2c_dot_2_fu_238_C_array_ce0 : STD_LOGIC;
    signal grp_k2c_dot_2_fu_238_C_array_we0 : STD_LOGIC;
    signal grp_k2c_dot_2_fu_238_C_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_dot_2_fu_238_A_array_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_k2c_dot_2_fu_238_A_array_ce0 : STD_LOGIC;
    signal grp_k2c_dot_2_fu_238_A_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dot_2_fu_238_A_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dot_2_fu_238_B_array_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_k2c_dot_2_fu_238_B_array_ce0 : STD_LOGIC;
    signal grp_k2c_dot_2_fu_238_B_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dot_2_fu_238_B_shape_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_263_ap_start : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_263_C_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_k2c_affine_matmul_fu_263_C_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_263_C_we0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_263_C_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_affine_matmul_fu_263_A_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_k2c_affine_matmul_fu_263_A_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_263_B_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_k2c_affine_matmul_fu_263_B_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_263_d_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_k2c_affine_matmul_fu_263_d_ce0 : STD_LOGIC;
    signal i_i1_reg_192 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_phi_mux_j_i_phi_fu_208_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_k2c_dot_2_fu_238_ap_start_reg : STD_LOGIC := '0';
    signal grp_k2c_affine_matmul_fu_263_ap_start_reg : STD_LOGIC := '0';
    signal tmp_i_cast_fu_376_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_i4_cast_fu_386_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal i_i_cast_fu_428_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal grp_fu_279_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal grp_fu_291_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_331_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_68_fu_367_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_52_fu_371_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_to_int_i9_fu_402_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_neg_i1_fu_406_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_to_int_i_fu_444_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_neg_i_fu_448_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_424_ce : STD_LOGIC;
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_state7_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_state8_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;

    component k2c_dot_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_array_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        C_array_ce0 : OUT STD_LOGIC;
        C_array_we0 : OUT STD_LOGIC;
        C_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_array_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        A_array_ce0 : OUT STD_LOGIC;
        A_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        A_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        A_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_shape_ce0 : OUT STD_LOGIC;
        A_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        B_array_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        B_array_ce0 : OUT STD_LOGIC;
        B_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        B_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        B_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_shape_ce0 : OUT STD_LOGIC;
        B_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component k2c_affine_matmul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        C_ce0 : OUT STD_LOGIC;
        C_we0 : OUT STD_LOGIC;
        C_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        B_ce0 : OUT STD_LOGIC;
        B_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        d_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        d_ce0 : OUT STD_LOGIC;
        d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        outrows : IN STD_LOGIC_VECTOR (63 downto 0);
        outcols : IN STD_LOGIC_VECTOR (63 downto 0);
        innerdim : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component WebModel_fadd_32ncud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component WebModel_fdiv_32nqcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component WebModel_fexp_32nrcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component WebModel_mul_64s_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_k2c_dot_2_fu_238 : component k2c_dot_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_dot_2_fu_238_ap_start,
        ap_done => grp_k2c_dot_2_fu_238_ap_done,
        ap_idle => grp_k2c_dot_2_fu_238_ap_idle,
        ap_ready => grp_k2c_dot_2_fu_238_ap_ready,
        C_array_address0 => grp_k2c_dot_2_fu_238_C_array_address0,
        C_array_ce0 => grp_k2c_dot_2_fu_238_C_array_ce0,
        C_array_we0 => grp_k2c_dot_2_fu_238_C_array_we0,
        C_array_d0 => grp_k2c_dot_2_fu_238_C_array_d0,
        C_array_q0 => output_array_q0,
        A_array_address0 => grp_k2c_dot_2_fu_238_A_array_address0,
        A_array_ce0 => grp_k2c_dot_2_fu_238_A_array_ce0,
        A_array_q0 => input_array_q0,
        A_ndim_read => input_ndim_read,
        A_numel_read => input_numel_read,
        A_shape_address0 => grp_k2c_dot_2_fu_238_A_shape_address0,
        A_shape_ce0 => grp_k2c_dot_2_fu_238_A_shape_ce0,
        A_shape_q0 => input_shape_q0,
        B_array_address0 => grp_k2c_dot_2_fu_238_B_array_address0,
        B_array_ce0 => grp_k2c_dot_2_fu_238_B_array_ce0,
        B_array_q0 => kernel_array_q0,
        B_ndim_read => kernel_ndim_read,
        B_numel_read => kernel_numel_read,
        B_shape_address0 => grp_k2c_dot_2_fu_238_B_shape_address0,
        B_shape_ce0 => grp_k2c_dot_2_fu_238_B_shape_ce0,
        B_shape_q0 => kernel_shape_q0,
        p_read4 => tmp_9_reg_495);

    grp_k2c_affine_matmul_fu_263 : component k2c_affine_matmul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_affine_matmul_fu_263_ap_start,
        ap_done => grp_k2c_affine_matmul_fu_263_ap_done,
        ap_idle => grp_k2c_affine_matmul_fu_263_ap_idle,
        ap_ready => grp_k2c_affine_matmul_fu_263_ap_ready,
        C_address0 => grp_k2c_affine_matmul_fu_263_C_address0,
        C_ce0 => grp_k2c_affine_matmul_fu_263_C_ce0,
        C_we0 => grp_k2c_affine_matmul_fu_263_C_we0,
        C_d0 => grp_k2c_affine_matmul_fu_263_C_d0,
        A_address0 => grp_k2c_affine_matmul_fu_263_A_address0,
        A_ce0 => grp_k2c_affine_matmul_fu_263_A_ce0,
        A_q0 => input_array_q0,
        B_address0 => grp_k2c_affine_matmul_fu_263_B_address0,
        B_ce0 => grp_k2c_affine_matmul_fu_263_B_ce0,
        B_q0 => kernel_array_q0,
        d_address0 => grp_k2c_affine_matmul_fu_263_d_address0,
        d_ce0 => grp_k2c_affine_matmul_fu_263_d_ce0,
        d_q0 => bias_array_q0,
        outrows => outrows_reg_573,
        outcols => outcols_reg_579,
        innerdim => innerdim_reg_590);

    WebModel_fadd_32ncud_U166 : component WebModel_fadd_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_279_p0,
        din1 => grp_fu_279_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_279_p2);

    WebModel_fdiv_32nqcK_U167 : component WebModel_fdiv_32nqcK
    generic map (
        ID => 1,
        NUM_STAGE => 12,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_3F800000,
        din1 => reg_307,
        ce => ap_const_logic_1,
        dout => grp_fu_286_p2);

    WebModel_fexp_32nrcU_U168 : component WebModel_fexp_32nrcU
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => grp_fu_291_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_291_p2);

    WebModel_mul_64s_bkb_U169 : component WebModel_mul_64s_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => outcols_reg_579,
        din1 => outrows_reg_573,
        ce => grp_fu_424_ce,
        dout => grp_fu_424_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((tmp_i2_fu_347_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((tmp_i2_fu_347_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state12) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_i2_fu_347_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state12)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state12);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter23 <= ap_enable_reg_pp1_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter24 <= ap_enable_reg_pp1_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter25 <= ap_enable_reg_pp1_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter26 <= ap_enable_reg_pp1_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter27 <= ap_enable_reg_pp1_iter26;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_i2_fu_347_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter27 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state44) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((grp_k2c_affine_matmul_fu_263_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state44)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state44);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter19 <= ap_enable_reg_pp2_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter20 <= ap_enable_reg_pp2_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter21 <= ap_enable_reg_pp2_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter22 <= ap_enable_reg_pp2_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter23 <= ap_enable_reg_pp2_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter24 <= ap_enable_reg_pp2_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter25 <= ap_enable_reg_pp2_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter26 <= ap_enable_reg_pp2_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter27 <= ap_enable_reg_pp2_iter26;
                elsif (((grp_k2c_affine_matmul_fu_263_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                    ap_enable_reg_pp2_iter27 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_k2c_affine_matmul_fu_263_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_affine_matmul_fu_263_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                    grp_k2c_affine_matmul_fu_263_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_affine_matmul_fu_263_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_affine_matmul_fu_263_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_k2c_dot_2_fu_238_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_dot_2_fu_238_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_318_p2 = ap_const_lv1_0))) then 
                    grp_k2c_dot_2_fu_238_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_dot_2_fu_238_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_dot_2_fu_238_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i1_reg_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                i_i1_reg_192 <= i_25_fu_381_p2;
            elsif (((grp_k2c_dot_2_fu_238_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_i1_reg_192 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    i_i4_reg_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_i2_fu_347_p2 = ap_const_lv1_0))) then 
                i_i4_reg_216 <= ap_const_lv15_0;
            elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_i5_fu_391_p2 = ap_const_lv1_0))) then 
                i_i4_reg_216 <= i_52_fu_396_p2;
            end if; 
        end if;
    end process;

    i_i_reg_227_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_i_fu_433_p2 = ap_const_lv1_0))) then 
                i_i_reg_227 <= i_fu_438_p2;
            elsif (((grp_k2c_affine_matmul_fu_263_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                i_i_reg_227 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    j_i_reg_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i2_fu_347_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                j_i_reg_204 <= ap_const_lv64_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i3_reg_524 = ap_const_lv1_0))) then 
                j_i_reg_204 <= j_reg_528;
            end if; 
        end if;
    end process;

    reg_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_i_reg_600 = ap_const_lv1_0))) then 
                reg_296 <= output_array_q1;
            elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_i3_reg_524 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_i5_reg_553 = ap_const_lv1_0)))) then 
                reg_296 <= output_array_q0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_i3_reg_524 = ap_const_lv1_0))) then
                bias_array_load_reg_543 <= bias_array_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_i3_reg_524 <= exitcond_i3_fu_356_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                exitcond_i5_reg_553 <= exitcond_i5_fu_391_p2;
                exitcond_i5_reg_553_pp1_iter1_reg <= exitcond_i5_reg_553;
                output_array_addr_2_reg_562_pp1_iter1_reg <= output_array_addr_2_reg_562;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                exitcond_i5_reg_553_pp1_iter10_reg <= exitcond_i5_reg_553_pp1_iter9_reg;
                exitcond_i5_reg_553_pp1_iter11_reg <= exitcond_i5_reg_553_pp1_iter10_reg;
                exitcond_i5_reg_553_pp1_iter12_reg <= exitcond_i5_reg_553_pp1_iter11_reg;
                exitcond_i5_reg_553_pp1_iter13_reg <= exitcond_i5_reg_553_pp1_iter12_reg;
                exitcond_i5_reg_553_pp1_iter14_reg <= exitcond_i5_reg_553_pp1_iter13_reg;
                exitcond_i5_reg_553_pp1_iter15_reg <= exitcond_i5_reg_553_pp1_iter14_reg;
                exitcond_i5_reg_553_pp1_iter16_reg <= exitcond_i5_reg_553_pp1_iter15_reg;
                exitcond_i5_reg_553_pp1_iter17_reg <= exitcond_i5_reg_553_pp1_iter16_reg;
                exitcond_i5_reg_553_pp1_iter18_reg <= exitcond_i5_reg_553_pp1_iter17_reg;
                exitcond_i5_reg_553_pp1_iter19_reg <= exitcond_i5_reg_553_pp1_iter18_reg;
                exitcond_i5_reg_553_pp1_iter20_reg <= exitcond_i5_reg_553_pp1_iter19_reg;
                exitcond_i5_reg_553_pp1_iter21_reg <= exitcond_i5_reg_553_pp1_iter20_reg;
                exitcond_i5_reg_553_pp1_iter22_reg <= exitcond_i5_reg_553_pp1_iter21_reg;
                exitcond_i5_reg_553_pp1_iter23_reg <= exitcond_i5_reg_553_pp1_iter22_reg;
                exitcond_i5_reg_553_pp1_iter24_reg <= exitcond_i5_reg_553_pp1_iter23_reg;
                exitcond_i5_reg_553_pp1_iter25_reg <= exitcond_i5_reg_553_pp1_iter24_reg;
                exitcond_i5_reg_553_pp1_iter26_reg <= exitcond_i5_reg_553_pp1_iter25_reg;
                exitcond_i5_reg_553_pp1_iter2_reg <= exitcond_i5_reg_553_pp1_iter1_reg;
                exitcond_i5_reg_553_pp1_iter3_reg <= exitcond_i5_reg_553_pp1_iter2_reg;
                exitcond_i5_reg_553_pp1_iter4_reg <= exitcond_i5_reg_553_pp1_iter3_reg;
                exitcond_i5_reg_553_pp1_iter5_reg <= exitcond_i5_reg_553_pp1_iter4_reg;
                exitcond_i5_reg_553_pp1_iter6_reg <= exitcond_i5_reg_553_pp1_iter5_reg;
                exitcond_i5_reg_553_pp1_iter7_reg <= exitcond_i5_reg_553_pp1_iter6_reg;
                exitcond_i5_reg_553_pp1_iter8_reg <= exitcond_i5_reg_553_pp1_iter7_reg;
                exitcond_i5_reg_553_pp1_iter9_reg <= exitcond_i5_reg_553_pp1_iter8_reg;
                output_array_addr_2_reg_562_pp1_iter10_reg <= output_array_addr_2_reg_562_pp1_iter9_reg;
                output_array_addr_2_reg_562_pp1_iter11_reg <= output_array_addr_2_reg_562_pp1_iter10_reg;
                output_array_addr_2_reg_562_pp1_iter12_reg <= output_array_addr_2_reg_562_pp1_iter11_reg;
                output_array_addr_2_reg_562_pp1_iter13_reg <= output_array_addr_2_reg_562_pp1_iter12_reg;
                output_array_addr_2_reg_562_pp1_iter14_reg <= output_array_addr_2_reg_562_pp1_iter13_reg;
                output_array_addr_2_reg_562_pp1_iter15_reg <= output_array_addr_2_reg_562_pp1_iter14_reg;
                output_array_addr_2_reg_562_pp1_iter16_reg <= output_array_addr_2_reg_562_pp1_iter15_reg;
                output_array_addr_2_reg_562_pp1_iter17_reg <= output_array_addr_2_reg_562_pp1_iter16_reg;
                output_array_addr_2_reg_562_pp1_iter18_reg <= output_array_addr_2_reg_562_pp1_iter17_reg;
                output_array_addr_2_reg_562_pp1_iter19_reg <= output_array_addr_2_reg_562_pp1_iter18_reg;
                output_array_addr_2_reg_562_pp1_iter20_reg <= output_array_addr_2_reg_562_pp1_iter19_reg;
                output_array_addr_2_reg_562_pp1_iter21_reg <= output_array_addr_2_reg_562_pp1_iter20_reg;
                output_array_addr_2_reg_562_pp1_iter22_reg <= output_array_addr_2_reg_562_pp1_iter21_reg;
                output_array_addr_2_reg_562_pp1_iter23_reg <= output_array_addr_2_reg_562_pp1_iter22_reg;
                output_array_addr_2_reg_562_pp1_iter24_reg <= output_array_addr_2_reg_562_pp1_iter23_reg;
                output_array_addr_2_reg_562_pp1_iter25_reg <= output_array_addr_2_reg_562_pp1_iter24_reg;
                output_array_addr_2_reg_562_pp1_iter26_reg <= output_array_addr_2_reg_562_pp1_iter25_reg;
                output_array_addr_2_reg_562_pp1_iter2_reg <= output_array_addr_2_reg_562_pp1_iter1_reg;
                output_array_addr_2_reg_562_pp1_iter3_reg <= output_array_addr_2_reg_562_pp1_iter2_reg;
                output_array_addr_2_reg_562_pp1_iter4_reg <= output_array_addr_2_reg_562_pp1_iter3_reg;
                output_array_addr_2_reg_562_pp1_iter5_reg <= output_array_addr_2_reg_562_pp1_iter4_reg;
                output_array_addr_2_reg_562_pp1_iter6_reg <= output_array_addr_2_reg_562_pp1_iter5_reg;
                output_array_addr_2_reg_562_pp1_iter7_reg <= output_array_addr_2_reg_562_pp1_iter6_reg;
                output_array_addr_2_reg_562_pp1_iter8_reg <= output_array_addr_2_reg_562_pp1_iter7_reg;
                output_array_addr_2_reg_562_pp1_iter9_reg <= output_array_addr_2_reg_562_pp1_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                exitcond_i_reg_600 <= exitcond_i_fu_433_p2;
                exitcond_i_reg_600_pp2_iter1_reg <= exitcond_i_reg_600;
                output_array_addr_reg_609_pp2_iter1_reg <= output_array_addr_reg_609;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                exitcond_i_reg_600_pp2_iter10_reg <= exitcond_i_reg_600_pp2_iter9_reg;
                exitcond_i_reg_600_pp2_iter11_reg <= exitcond_i_reg_600_pp2_iter10_reg;
                exitcond_i_reg_600_pp2_iter12_reg <= exitcond_i_reg_600_pp2_iter11_reg;
                exitcond_i_reg_600_pp2_iter13_reg <= exitcond_i_reg_600_pp2_iter12_reg;
                exitcond_i_reg_600_pp2_iter14_reg <= exitcond_i_reg_600_pp2_iter13_reg;
                exitcond_i_reg_600_pp2_iter15_reg <= exitcond_i_reg_600_pp2_iter14_reg;
                exitcond_i_reg_600_pp2_iter16_reg <= exitcond_i_reg_600_pp2_iter15_reg;
                exitcond_i_reg_600_pp2_iter17_reg <= exitcond_i_reg_600_pp2_iter16_reg;
                exitcond_i_reg_600_pp2_iter18_reg <= exitcond_i_reg_600_pp2_iter17_reg;
                exitcond_i_reg_600_pp2_iter19_reg <= exitcond_i_reg_600_pp2_iter18_reg;
                exitcond_i_reg_600_pp2_iter20_reg <= exitcond_i_reg_600_pp2_iter19_reg;
                exitcond_i_reg_600_pp2_iter21_reg <= exitcond_i_reg_600_pp2_iter20_reg;
                exitcond_i_reg_600_pp2_iter22_reg <= exitcond_i_reg_600_pp2_iter21_reg;
                exitcond_i_reg_600_pp2_iter23_reg <= exitcond_i_reg_600_pp2_iter22_reg;
                exitcond_i_reg_600_pp2_iter24_reg <= exitcond_i_reg_600_pp2_iter23_reg;
                exitcond_i_reg_600_pp2_iter25_reg <= exitcond_i_reg_600_pp2_iter24_reg;
                exitcond_i_reg_600_pp2_iter26_reg <= exitcond_i_reg_600_pp2_iter25_reg;
                exitcond_i_reg_600_pp2_iter2_reg <= exitcond_i_reg_600_pp2_iter1_reg;
                exitcond_i_reg_600_pp2_iter3_reg <= exitcond_i_reg_600_pp2_iter2_reg;
                exitcond_i_reg_600_pp2_iter4_reg <= exitcond_i_reg_600_pp2_iter3_reg;
                exitcond_i_reg_600_pp2_iter5_reg <= exitcond_i_reg_600_pp2_iter4_reg;
                exitcond_i_reg_600_pp2_iter6_reg <= exitcond_i_reg_600_pp2_iter5_reg;
                exitcond_i_reg_600_pp2_iter7_reg <= exitcond_i_reg_600_pp2_iter6_reg;
                exitcond_i_reg_600_pp2_iter8_reg <= exitcond_i_reg_600_pp2_iter7_reg;
                exitcond_i_reg_600_pp2_iter9_reg <= exitcond_i_reg_600_pp2_iter8_reg;
                output_array_addr_reg_609_pp2_iter10_reg <= output_array_addr_reg_609_pp2_iter9_reg;
                output_array_addr_reg_609_pp2_iter11_reg <= output_array_addr_reg_609_pp2_iter10_reg;
                output_array_addr_reg_609_pp2_iter12_reg <= output_array_addr_reg_609_pp2_iter11_reg;
                output_array_addr_reg_609_pp2_iter13_reg <= output_array_addr_reg_609_pp2_iter12_reg;
                output_array_addr_reg_609_pp2_iter14_reg <= output_array_addr_reg_609_pp2_iter13_reg;
                output_array_addr_reg_609_pp2_iter15_reg <= output_array_addr_reg_609_pp2_iter14_reg;
                output_array_addr_reg_609_pp2_iter16_reg <= output_array_addr_reg_609_pp2_iter15_reg;
                output_array_addr_reg_609_pp2_iter17_reg <= output_array_addr_reg_609_pp2_iter16_reg;
                output_array_addr_reg_609_pp2_iter18_reg <= output_array_addr_reg_609_pp2_iter17_reg;
                output_array_addr_reg_609_pp2_iter19_reg <= output_array_addr_reg_609_pp2_iter18_reg;
                output_array_addr_reg_609_pp2_iter20_reg <= output_array_addr_reg_609_pp2_iter19_reg;
                output_array_addr_reg_609_pp2_iter21_reg <= output_array_addr_reg_609_pp2_iter20_reg;
                output_array_addr_reg_609_pp2_iter22_reg <= output_array_addr_reg_609_pp2_iter21_reg;
                output_array_addr_reg_609_pp2_iter23_reg <= output_array_addr_reg_609_pp2_iter22_reg;
                output_array_addr_reg_609_pp2_iter24_reg <= output_array_addr_reg_609_pp2_iter23_reg;
                output_array_addr_reg_609_pp2_iter25_reg <= output_array_addr_reg_609_pp2_iter24_reg;
                output_array_addr_reg_609_pp2_iter26_reg <= output_array_addr_reg_609_pp2_iter25_reg;
                output_array_addr_reg_609_pp2_iter2_reg <= output_array_addr_reg_609_pp2_iter1_reg;
                output_array_addr_reg_609_pp2_iter3_reg <= output_array_addr_reg_609_pp2_iter2_reg;
                output_array_addr_reg_609_pp2_iter4_reg <= output_array_addr_reg_609_pp2_iter3_reg;
                output_array_addr_reg_609_pp2_iter5_reg <= output_array_addr_reg_609_pp2_iter4_reg;
                output_array_addr_reg_609_pp2_iter6_reg <= output_array_addr_reg_609_pp2_iter5_reg;
                output_array_addr_reg_609_pp2_iter7_reg <= output_array_addr_reg_609_pp2_iter6_reg;
                output_array_addr_reg_609_pp2_iter8_reg <= output_array_addr_reg_609_pp2_iter7_reg;
                output_array_addr_reg_609_pp2_iter9_reg <= output_array_addr_reg_609_pp2_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_318_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_reg_500 <= icmp_fu_341_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                innerdim_reg_590 <= kernel_shape_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                j_reg_528 <= j_fu_361_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                outcols_reg_579 <= kernel_shape_q0;
                outrows_reg_573 <= outrows_fu_417_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i3_fu_356_p2 = ap_const_lv1_0))) then
                output_array_addr_1_reg_538 <= tmp_i_cast_fu_376_p1(15 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_i5_fu_391_p2 = ap_const_lv1_0))) then
                output_array_addr_2_reg_562 <= i_i4_cast_fu_386_p1(15 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_i_fu_433_p2 = ap_const_lv1_0))) then
                output_array_addr_reg_609 <= i_i_cast_fu_428_p1(15 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_k2c_affine_matmul_fu_263_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                outsize_reg_595 <= grp_fu_424_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp2_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_i_reg_600_pp2_iter8_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_i5_reg_553_pp1_iter8_reg = ap_const_lv1_0)))) then
                reg_302 <= grp_fu_291_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp2_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_i_reg_600_pp2_iter13_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_i5_reg_553_pp1_iter13_reg = ap_const_lv1_0)))) then
                reg_307 <= grp_fu_279_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp2_iter26 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_i_reg_600_pp2_iter25_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter26 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_i5_reg_553_pp1_iter25_reg = ap_const_lv1_0)))) then
                reg_312 <= grp_fu_286_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i2_fu_347_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_67_reg_519 <= tmp_67_fu_352_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_318_p2 = ap_const_lv1_0))) then
                tmp_9_reg_495 <= tmp_9_fu_324_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp1_iter26, ap_enable_reg_pp2_iter26, tmp_fu_318_p2, tmp_i2_fu_347_p2, ap_CS_fsm_state3, exitcond_i3_fu_356_p2, exitcond_i5_fu_391_p2, ap_enable_reg_pp1_iter0, ap_CS_fsm_state43, grp_k2c_affine_matmul_fu_263_ap_done, exitcond_i_fu_433_p2, ap_enable_reg_pp2_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage5_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter27, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter27, grp_k2c_dot_2_fu_238_ap_done, ap_CS_fsm_state2, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((tmp_fu_318_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_318_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_k2c_dot_2_fu_238_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_i2_fu_347_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_i3_fu_356_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_i3_fu_356_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond_i5_fu_391_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter26 = ap_const_logic_0) and (ap_enable_reg_pp1_iter27 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter26 = ap_const_logic_0) and (ap_enable_reg_pp1_iter27 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond_i5_fu_391_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                if (((grp_k2c_affine_matmul_fu_263_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (exitcond_i_fu_433_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter26 = ap_const_logic_0) and (ap_enable_reg_pp2_iter27 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter26 = ap_const_logic_0) and (ap_enable_reg_pp2_iter27 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (exitcond_i_fu_433_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(8);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(15);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state41 <= ap_CS_fsm(12);
    ap_CS_fsm_state42 <= ap_CS_fsm(13);
    ap_CS_fsm_state43 <= ap_CS_fsm(14);
    ap_CS_fsm_state72 <= ap_CS_fsm(16);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp1_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp1_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp1_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp1_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp1_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp1_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp1_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp1_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp1_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp2_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp2_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp2_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp2_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp2_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp2_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp2_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp2_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp2_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp2_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp2_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp2_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp2_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp2_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp2_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp2_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp2_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp2_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp2_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp2_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp2_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp2_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp2_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state4_assign_proc : process(exitcond_i3_fu_356_p2)
    begin
        if ((exitcond_i3_fu_356_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state12_assign_proc : process(exitcond_i5_fu_391_p2)
    begin
        if ((exitcond_i5_fu_391_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state12 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state44_assign_proc : process(exitcond_i_fu_433_p2)
    begin
        if ((exitcond_i_fu_433_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state44 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state44 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state72) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter9, ap_enable_reg_pp1_iter14, ap_enable_reg_pp1_iter26, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter11, ap_enable_reg_pp1_iter12, ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter15, ap_enable_reg_pp1_iter16, ap_enable_reg_pp1_iter17, ap_enable_reg_pp1_iter18, ap_enable_reg_pp1_iter19, ap_enable_reg_pp1_iter20, ap_enable_reg_pp1_iter21, ap_enable_reg_pp1_iter22, ap_enable_reg_pp1_iter23, ap_enable_reg_pp1_iter24, ap_enable_reg_pp1_iter25, ap_enable_reg_pp1_iter27)
    begin
        if (((ap_enable_reg_pp1_iter27 = ap_const_logic_0) and (ap_enable_reg_pp1_iter25 = ap_const_logic_0) and (ap_enable_reg_pp1_iter24 = ap_const_logic_0) and (ap_enable_reg_pp1_iter23 = ap_const_logic_0) and (ap_enable_reg_pp1_iter22 = ap_const_logic_0) and (ap_enable_reg_pp1_iter21 = ap_const_logic_0) and (ap_enable_reg_pp1_iter20 = ap_const_logic_0) and (ap_enable_reg_pp1_iter19 = ap_const_logic_0) and (ap_enable_reg_pp1_iter18 = ap_const_logic_0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_0) and (ap_enable_reg_pp1_iter15 = ap_const_logic_0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_0) and (ap_enable_reg_pp1_iter12 = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter26 = ap_const_logic_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter9, ap_enable_reg_pp2_iter14, ap_enable_reg_pp2_iter26, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4, ap_enable_reg_pp2_iter5, ap_enable_reg_pp2_iter6, ap_enable_reg_pp2_iter7, ap_enable_reg_pp2_iter8, ap_enable_reg_pp2_iter10, ap_enable_reg_pp2_iter11, ap_enable_reg_pp2_iter12, ap_enable_reg_pp2_iter13, ap_enable_reg_pp2_iter15, ap_enable_reg_pp2_iter16, ap_enable_reg_pp2_iter17, ap_enable_reg_pp2_iter18, ap_enable_reg_pp2_iter19, ap_enable_reg_pp2_iter20, ap_enable_reg_pp2_iter21, ap_enable_reg_pp2_iter22, ap_enable_reg_pp2_iter23, ap_enable_reg_pp2_iter24, ap_enable_reg_pp2_iter25, ap_enable_reg_pp2_iter27)
    begin
        if (((ap_enable_reg_pp2_iter27 = ap_const_logic_0) and (ap_enable_reg_pp2_iter25 = ap_const_logic_0) and (ap_enable_reg_pp2_iter24 = ap_const_logic_0) and (ap_enable_reg_pp2_iter23 = ap_const_logic_0) and (ap_enable_reg_pp2_iter22 = ap_const_logic_0) and (ap_enable_reg_pp2_iter21 = ap_const_logic_0) and (ap_enable_reg_pp2_iter20 = ap_const_logic_0) and (ap_enable_reg_pp2_iter19 = ap_const_logic_0) and (ap_enable_reg_pp2_iter18 = ap_const_logic_0) and (ap_enable_reg_pp2_iter17 = ap_const_logic_0) and (ap_enable_reg_pp2_iter16 = ap_const_logic_0) and (ap_enable_reg_pp2_iter15 = ap_const_logic_0) and (ap_enable_reg_pp2_iter13 = ap_const_logic_0) and (ap_enable_reg_pp2_iter12 = ap_const_logic_0) and (ap_enable_reg_pp2_iter11 = ap_const_logic_0) and (ap_enable_reg_pp2_iter10 = ap_const_logic_0) and (ap_enable_reg_pp2_iter8 = ap_const_logic_0) and (ap_enable_reg_pp2_iter7 = ap_const_logic_0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter26 = ap_const_logic_0) and (ap_enable_reg_pp2_iter14 = ap_const_logic_0) and (ap_enable_reg_pp2_iter9 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_j_i_phi_fu_208_p4_assign_proc : process(j_i_reg_204, exitcond_i3_reg_524, ap_CS_fsm_pp0_stage0, j_reg_528, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i3_reg_524 = ap_const_lv1_0))) then 
            ap_phi_mux_j_i_phi_fu_208_p4 <= j_reg_528;
        else 
            ap_phi_mux_j_i_phi_fu_208_p4 <= j_i_reg_204;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    bias_array_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state43, grp_k2c_affine_matmul_fu_263_d_address0, ap_phi_mux_j_i_phi_fu_208_p4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_array_address0 <= ap_phi_mux_j_i_phi_fu_208_p4(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            bias_array_address0 <= grp_k2c_affine_matmul_fu_263_d_address0;
        else 
            bias_array_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    bias_array_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state43, grp_k2c_affine_matmul_fu_263_d_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_array_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            bias_array_ce0 <= grp_k2c_affine_matmul_fu_263_d_ce0;
        else 
            bias_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_i3_fu_356_p2 <= "1" when (ap_phi_mux_j_i_phi_fu_208_p4 = bias_numel_read) else "0";
    exitcond_i5_fu_391_p2 <= "1" when (i_i4_cast_fu_386_p1 = output_numel_read) else "0";
    exitcond_i_fu_433_p2 <= "1" when (i_i_cast_fu_428_p1 = outsize_reg_595) else "0";

    grp_fu_279_p0_assign_proc : process(output_array_q0, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, reg_302, ap_enable_reg_pp1_iter10, ap_enable_reg_pp2_iter10, ap_block_pp1_stage0, ap_block_pp2_stage0, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter10 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1)))) then 
            grp_fu_279_p0 <= reg_302;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_279_p0 <= output_array_q0;
        else 
            grp_fu_279_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_279_p1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, bias_array_load_reg_543, ap_enable_reg_pp1_iter10, ap_enable_reg_pp2_iter10, ap_block_pp1_stage0, ap_block_pp2_stage0, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter10 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1)))) then 
            grp_fu_279_p1 <= ap_const_lv32_3F800000;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_279_p1 <= bias_array_load_reg_543;
        else 
            grp_fu_279_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_291_p1_assign_proc : process(tmp_i1_fu_412_p1, tmp_i_fu_454_p1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2, ap_block_pp1_stage0, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            grp_fu_291_p1 <= tmp_i_fu_454_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            grp_fu_291_p1 <= tmp_i1_fu_412_p1;
        else 
            grp_fu_291_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_424_ce_assign_proc : process(ap_CS_fsm_state42, ap_CS_fsm_state43, grp_k2c_affine_matmul_fu_263_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or ((grp_k2c_affine_matmul_fu_263_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state43)))) then 
            grp_fu_424_ce <= ap_const_logic_1;
        else 
            grp_fu_424_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_k2c_affine_matmul_fu_263_ap_start <= grp_k2c_affine_matmul_fu_263_ap_start_reg;
    grp_k2c_dot_2_fu_238_ap_start <= grp_k2c_dot_2_fu_238_ap_start_reg;
    i_25_fu_381_p2 <= std_logic_vector(unsigned(i_i1_reg_192) + unsigned(bias_numel_read));
    i_52_fu_396_p2 <= std_logic_vector(unsigned(i_i4_reg_216) + unsigned(ap_const_lv15_1));
    i_fu_438_p2 <= std_logic_vector(unsigned(i_i_reg_227) + unsigned(ap_const_lv15_1));
    i_i4_cast_fu_386_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i4_reg_216),64));
    i_i_cast_fu_428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_reg_227),64));
    icmp_fu_341_p2 <= "0" when (tmp_66_fu_331_p4 = ap_const_lv63_0) else "1";

    input_array_address0_assign_proc : process(ap_CS_fsm_state43, grp_k2c_dot_2_fu_238_A_array_address0, grp_k2c_affine_matmul_fu_263_A_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            input_array_address0 <= grp_k2c_affine_matmul_fu_263_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_array_address0 <= grp_k2c_dot_2_fu_238_A_array_address0;
        else 
            input_array_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_array_ce0_assign_proc : process(ap_CS_fsm_state43, grp_k2c_dot_2_fu_238_A_array_ce0, grp_k2c_affine_matmul_fu_263_A_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            input_array_ce0 <= grp_k2c_affine_matmul_fu_263_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_array_ce0 <= grp_k2c_dot_2_fu_238_A_array_ce0;
        else 
            input_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_shape_address0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_318_p2, grp_k2c_dot_2_fu_238_A_shape_address0, ap_CS_fsm_state2)
    begin
        if (((tmp_fu_318_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_shape_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_shape_address0 <= grp_k2c_dot_2_fu_238_A_shape_address0;
        else 
            input_shape_address0 <= "XXX";
        end if; 
    end process;


    input_shape_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_fu_318_p2, grp_k2c_dot_2_fu_238_A_shape_ce0, ap_CS_fsm_state2)
    begin
        if (((tmp_fu_318_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_shape_ce0 <= grp_k2c_dot_2_fu_238_A_shape_ce0;
        else 
            input_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_361_p2 <= std_logic_vector(unsigned(ap_phi_mux_j_i_phi_fu_208_p4) + unsigned(ap_const_lv64_1));

    kernel_array_address0_assign_proc : process(ap_CS_fsm_state43, grp_k2c_dot_2_fu_238_B_array_address0, grp_k2c_affine_matmul_fu_263_B_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            kernel_array_address0 <= grp_k2c_affine_matmul_fu_263_B_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_array_address0 <= grp_k2c_dot_2_fu_238_B_array_address0;
        else 
            kernel_array_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    kernel_array_ce0_assign_proc : process(ap_CS_fsm_state43, grp_k2c_dot_2_fu_238_B_array_ce0, grp_k2c_affine_matmul_fu_263_B_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            kernel_array_ce0 <= grp_k2c_affine_matmul_fu_263_B_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_array_ce0 <= grp_k2c_dot_2_fu_238_B_array_ce0;
        else 
            kernel_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_shape_address0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_318_p2, ap_CS_fsm_state41, grp_k2c_dot_2_fu_238_B_shape_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            kernel_shape_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif (((tmp_fu_318_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            kernel_shape_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_shape_address0 <= grp_k2c_dot_2_fu_238_B_shape_address0;
        else 
            kernel_shape_address0 <= "XXX";
        end if; 
    end process;


    kernel_shape_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_fu_318_p2, ap_CS_fsm_state41, grp_k2c_dot_2_fu_238_B_shape_ce0, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or ((tmp_fu_318_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            kernel_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_shape_ce0 <= grp_k2c_dot_2_fu_238_B_shape_ce0;
        else 
            kernel_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_array_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp0_stage0, output_array_addr_1_reg_538, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp1_iter0, ap_CS_fsm_state43, output_array_addr_reg_609_pp2_iter26_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter27, grp_k2c_dot_2_fu_238_C_array_address0, grp_k2c_affine_matmul_fu_263_C_address0, ap_CS_fsm_state2, ap_block_pp0_stage0, i_i4_cast_fu_386_p1, ap_block_pp1_stage0, ap_block_pp2_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter27 = ap_const_logic_1))) then 
            output_array_address0 <= output_array_addr_reg_609_pp2_iter26_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            output_array_address0 <= i_i4_cast_fu_386_p1(15 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            output_array_address0 <= output_array_addr_1_reg_538;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            output_array_address0 <= grp_k2c_affine_matmul_fu_263_C_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_array_address0 <= grp_k2c_dot_2_fu_238_C_array_address0;
        else 
            output_array_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_array_address1_assign_proc : process(ap_CS_fsm_pp2_stage0, output_array_addr_2_reg_562_pp1_iter26_reg, ap_enable_reg_pp2_iter0, ap_enable_reg_pp1_iter27, ap_block_pp1_stage0, i_i_cast_fu_428_p1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            output_array_address1 <= i_i_cast_fu_428_p1(15 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter27 = ap_const_logic_1))) then 
            output_array_address1 <= output_array_addr_2_reg_562_pp1_iter26_reg;
        else 
            output_array_address1 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_array_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_state43, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter27, grp_k2c_dot_2_fu_238_C_array_ce0, grp_k2c_affine_matmul_fu_263_C_ce0, ap_CS_fsm_state2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp2_iter27 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            output_array_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            output_array_ce0 <= grp_k2c_affine_matmul_fu_263_C_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_array_ce0 <= grp_k2c_dot_2_fu_238_C_array_ce0;
        else 
            output_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_array_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp1_iter27)
    begin
        if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp1_iter27 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            output_array_ce1 <= ap_const_logic_1;
        else 
            output_array_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_array_d0_assign_proc : process(grp_fu_279_p2, reg_312, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state43, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter27, grp_k2c_dot_2_fu_238_C_array_d0, grp_k2c_affine_matmul_fu_263_C_d0, ap_CS_fsm_state2, ap_block_pp0_stage0, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter27 = ap_const_logic_1))) then 
            output_array_d0 <= reg_312;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            output_array_d0 <= grp_fu_279_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            output_array_d0 <= grp_k2c_affine_matmul_fu_263_C_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_array_d0 <= grp_k2c_dot_2_fu_238_C_array_d0;
        else 
            output_array_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_array_d1 <= reg_312;

    output_array_we0_assign_proc : process(exitcond_i3_reg_524, ap_block_pp2_stage0_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state43, exitcond_i_reg_600_pp2_iter26_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter27, grp_k2c_dot_2_fu_238_C_array_we0, grp_k2c_affine_matmul_fu_263_C_we0, ap_CS_fsm_state2)
    begin
        if ((((ap_enable_reg_pp2_iter27 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_i_reg_600_pp2_iter26_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i3_reg_524 = ap_const_lv1_0)))) then 
            output_array_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            output_array_we0 <= grp_k2c_affine_matmul_fu_263_C_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_array_we0 <= grp_k2c_dot_2_fu_238_C_array_we0;
        else 
            output_array_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_array_we1_assign_proc : process(ap_block_pp1_stage0_11001, exitcond_i5_reg_553_pp1_iter26_reg, ap_enable_reg_pp1_iter27)
    begin
        if (((ap_enable_reg_pp1_iter27 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_i5_reg_553_pp1_iter26_reg = ap_const_lv1_0))) then 
            output_array_we1 <= ap_const_logic_1;
        else 
            output_array_we1 <= ap_const_logic_0;
        end if; 
    end process;

    outrows_fu_417_p3 <= 
        input_shape_q0 when (icmp_reg_500(0) = '1') else 
        ap_const_lv64_1;
    tmp_66_fu_331_p4 <= input_ndim_read(63 downto 1);
    tmp_67_fu_352_p1 <= i_i1_reg_192(16 - 1 downto 0);
    tmp_68_fu_367_p1 <= ap_phi_mux_j_i_phi_fu_208_p4(16 - 1 downto 0);
    tmp_9_fu_324_p2 <= std_logic_vector(unsigned(input_ndim_read) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF));
    tmp_fu_318_p2 <= "1" when (unsigned(input_ndim_read) < unsigned(ap_const_lv64_3)) else "0";
    tmp_i1_fu_412_p1 <= tmp_neg_i1_fu_406_p2;
    tmp_i2_fu_347_p2 <= "1" when (unsigned(i_i1_reg_192) < unsigned(output_numel_read)) else "0";
    tmp_i_52_fu_371_p2 <= std_logic_vector(unsigned(tmp_68_fu_367_p1) + unsigned(tmp_67_reg_519));
    tmp_i_cast_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_52_fu_371_p2),64));
    tmp_i_fu_454_p1 <= tmp_neg_i_fu_448_p2;
    tmp_neg_i1_fu_406_p2 <= (tmp_to_int_i9_fu_402_p1 xor ap_const_lv32_80000000);
    tmp_neg_i_fu_448_p2 <= (tmp_to_int_i_fu_444_p1 xor ap_const_lv32_80000000);
    tmp_to_int_i9_fu_402_p1 <= reg_296;
    tmp_to_int_i_fu_444_p1 <= reg_296;
end behav;
