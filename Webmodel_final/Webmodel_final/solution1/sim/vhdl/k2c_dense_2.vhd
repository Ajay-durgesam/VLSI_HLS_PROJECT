-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity k2c_dense_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_array_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    output_array_ce0 : OUT STD_LOGIC;
    output_array_we0 : OUT STD_LOGIC;
    output_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_array_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
    output_array_ce1 : OUT STD_LOGIC;
    output_array_we1 : OUT STD_LOGIC;
    output_array_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_array_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    input_array_ce0 : OUT STD_LOGIC;
    input_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
    input_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
    input_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_shape_ce0 : OUT STD_LOGIC;
    input_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    kernel_array_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    kernel_array_0_ce0 : OUT STD_LOGIC;
    kernel_array_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_array_1_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    kernel_array_1_ce0 : OUT STD_LOGIC;
    kernel_array_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_array_2_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    kernel_array_2_ce0 : OUT STD_LOGIC;
    kernel_array_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_array_3_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    kernel_array_3_ce0 : OUT STD_LOGIC;
    kernel_array_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    kernel_shape_ce0 : OUT STD_LOGIC;
    kernel_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    bias_array_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    bias_array_ce0 : OUT STD_LOGIC;
    bias_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of k2c_dense_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv64_40 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_149 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_i_reg_160 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_i_reg_171 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_355 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_249_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_reg_359 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_364 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_379 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_reg_379_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_379_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_379_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_379_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_379_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_379_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_278_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal i_i_mid2_fu_304_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_i_mid2_reg_388 : STD_LOGIC_VECTOR (6 downto 0);
    signal output_array_addr_reg_398 : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_398_pp0_iter1_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_398_pp0_iter2_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_398_pp0_iter3_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_398_pp0_iter4_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_398_pp0_iter5_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal output_array_addr_reg_398_pp0_iter6_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal j_fu_328_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal bias_array_load_reg_409 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_array_load_reg_414 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal grp_fu_239_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_i_reg_419 : STD_LOGIC_VECTOR (31 downto 0);
    signal outrows_fu_334_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal outrows_reg_424 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal outcols_reg_430 : STD_LOGIC_VECTOR (63 downto 0);
    signal innerdim_reg_441 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_fu_341_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal outsize_reg_446 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_k2c_affine_matmul_1_fu_209_ap_idle : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_209_ap_ready : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_209_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_k2c_dot_fu_182_ap_idle : STD_LOGIC;
    signal grp_k2c_dot_fu_182_ap_ready : STD_LOGIC;
    signal grp_k2c_dot_fu_182_ap_done : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal grp_k2c_dot_fu_182_ap_start : STD_LOGIC;
    signal grp_k2c_dot_fu_182_C_array_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_k2c_dot_fu_182_C_array_ce0 : STD_LOGIC;
    signal grp_k2c_dot_fu_182_C_array_we0 : STD_LOGIC;
    signal grp_k2c_dot_fu_182_C_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_dot_fu_182_A_array_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_k2c_dot_fu_182_A_array_ce0 : STD_LOGIC;
    signal grp_k2c_dot_fu_182_A_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dot_fu_182_A_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dot_fu_182_B_array_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_k2c_dot_fu_182_B_array_0_ce0 : STD_LOGIC;
    signal grp_k2c_dot_fu_182_B_array_1_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_k2c_dot_fu_182_B_array_1_ce0 : STD_LOGIC;
    signal grp_k2c_dot_fu_182_B_array_2_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_k2c_dot_fu_182_B_array_2_ce0 : STD_LOGIC;
    signal grp_k2c_dot_fu_182_B_array_3_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_k2c_dot_fu_182_B_array_3_ce0 : STD_LOGIC;
    signal grp_k2c_dot_fu_182_B_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dot_fu_182_B_shape_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_209_ap_start : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_209_C_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_k2c_affine_matmul_1_fu_209_C_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_209_C_we0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_209_C_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_affine_matmul_1_fu_209_A_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_k2c_affine_matmul_1_fu_209_A_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_209_B_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_k2c_affine_matmul_1_fu_209_B_0_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_209_B_1_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_k2c_affine_matmul_1_fu_209_B_1_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_209_B_2_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_k2c_affine_matmul_1_fu_209_B_2_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_209_B_3_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_k2c_affine_matmul_1_fu_209_B_3_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_209_d_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_k2c_affine_matmul_1_fu_209_d_ce0 : STD_LOGIC;
    signal grp_k2c_relu_func_fu_231_ap_start : STD_LOGIC;
    signal grp_k2c_relu_func_fu_231_ap_done : STD_LOGIC;
    signal grp_k2c_relu_func_fu_231_ap_idle : STD_LOGIC;
    signal grp_k2c_relu_func_fu_231_ap_ready : STD_LOGIC;
    signal grp_k2c_relu_func_fu_231_x_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_k2c_relu_func_fu_231_x_ce0 : STD_LOGIC;
    signal grp_k2c_relu_func_fu_231_x_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_k2c_relu_func_fu_231_x_ce1 : STD_LOGIC;
    signal grp_k2c_relu_func_fu_231_x_we1 : STD_LOGIC;
    signal grp_k2c_relu_func_fu_231_x_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_relu_func_fu_231_size : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_i_i_phi_fu_164_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_k2c_dot_fu_182_ap_start_reg : STD_LOGIC := '0';
    signal grp_k2c_affine_matmul_1_fu_209_ap_start_reg : STD_LOGIC := '0';
    signal grp_k2c_relu_func_fu_231_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal j_i_cast1_fu_312_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_cast_fu_323_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_62_fu_256_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal exitcond_i4_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i2_fu_298_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_i_mid2_fu_290_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_i_fu_317_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_341_ce : STD_LOGIC;
    signal ap_block_state17_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component k2c_dot IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_array_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        C_array_ce0 : OUT STD_LOGIC;
        C_array_we0 : OUT STD_LOGIC;
        C_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_array_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        A_array_ce0 : OUT STD_LOGIC;
        A_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        A_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        A_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_shape_ce0 : OUT STD_LOGIC;
        A_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        B_array_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        B_array_0_ce0 : OUT STD_LOGIC;
        B_array_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_array_1_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        B_array_1_ce0 : OUT STD_LOGIC;
        B_array_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_array_2_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        B_array_2_ce0 : OUT STD_LOGIC;
        B_array_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_array_3_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        B_array_3_ce0 : OUT STD_LOGIC;
        B_array_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_shape_ce0 : OUT STD_LOGIC;
        B_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        axesA_0_read : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component k2c_affine_matmul_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        C_ce0 : OUT STD_LOGIC;
        C_we0 : OUT STD_LOGIC;
        C_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        B_0_ce0 : OUT STD_LOGIC;
        B_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_1_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        B_1_ce0 : OUT STD_LOGIC;
        B_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_2_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        B_2_ce0 : OUT STD_LOGIC;
        B_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_3_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        B_3_ce0 : OUT STD_LOGIC;
        B_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        d_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        d_ce0 : OUT STD_LOGIC;
        d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        outrows : IN STD_LOGIC_VECTOR (63 downto 0);
        outcols : IN STD_LOGIC_VECTOR (63 downto 0);
        innerdim : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component k2c_relu_func IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        x_ce0 : OUT STD_LOGIC;
        x_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        x_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        x_ce1 : OUT STD_LOGIC;
        x_we1 : OUT STD_LOGIC;
        x_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        size : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component WebModel_fadd_32ncud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component WebModel_mul_64s_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_k2c_dot_fu_182 : component k2c_dot
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_dot_fu_182_ap_start,
        ap_done => grp_k2c_dot_fu_182_ap_done,
        ap_idle => grp_k2c_dot_fu_182_ap_idle,
        ap_ready => grp_k2c_dot_fu_182_ap_ready,
        C_array_address0 => grp_k2c_dot_fu_182_C_array_address0,
        C_array_ce0 => grp_k2c_dot_fu_182_C_array_ce0,
        C_array_we0 => grp_k2c_dot_fu_182_C_array_we0,
        C_array_d0 => grp_k2c_dot_fu_182_C_array_d0,
        C_array_q0 => output_array_q0,
        A_array_address0 => grp_k2c_dot_fu_182_A_array_address0,
        A_array_ce0 => grp_k2c_dot_fu_182_A_array_ce0,
        A_array_q0 => input_array_q0,
        A_ndim_read => input_ndim_read,
        A_numel_read => input_numel_read,
        A_shape_address0 => grp_k2c_dot_fu_182_A_shape_address0,
        A_shape_ce0 => grp_k2c_dot_fu_182_A_shape_ce0,
        A_shape_q0 => input_shape_q0,
        B_array_0_address0 => grp_k2c_dot_fu_182_B_array_0_address0,
        B_array_0_ce0 => grp_k2c_dot_fu_182_B_array_0_ce0,
        B_array_0_q0 => kernel_array_0_q0,
        B_array_1_address0 => grp_k2c_dot_fu_182_B_array_1_address0,
        B_array_1_ce0 => grp_k2c_dot_fu_182_B_array_1_ce0,
        B_array_1_q0 => kernel_array_1_q0,
        B_array_2_address0 => grp_k2c_dot_fu_182_B_array_2_address0,
        B_array_2_ce0 => grp_k2c_dot_fu_182_B_array_2_ce0,
        B_array_2_q0 => kernel_array_2_q0,
        B_array_3_address0 => grp_k2c_dot_fu_182_B_array_3_address0,
        B_array_3_ce0 => grp_k2c_dot_fu_182_B_array_3_ce0,
        B_array_3_q0 => kernel_array_3_q0,
        B_shape_address0 => grp_k2c_dot_fu_182_B_shape_address0,
        B_shape_ce0 => grp_k2c_dot_fu_182_B_shape_ce0,
        B_shape_q0 => kernel_shape_q0,
        axesA_0_read => tmp_7_reg_359);

    grp_k2c_affine_matmul_1_fu_209 : component k2c_affine_matmul_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_affine_matmul_1_fu_209_ap_start,
        ap_done => grp_k2c_affine_matmul_1_fu_209_ap_done,
        ap_idle => grp_k2c_affine_matmul_1_fu_209_ap_idle,
        ap_ready => grp_k2c_affine_matmul_1_fu_209_ap_ready,
        C_address0 => grp_k2c_affine_matmul_1_fu_209_C_address0,
        C_ce0 => grp_k2c_affine_matmul_1_fu_209_C_ce0,
        C_we0 => grp_k2c_affine_matmul_1_fu_209_C_we0,
        C_d0 => grp_k2c_affine_matmul_1_fu_209_C_d0,
        A_address0 => grp_k2c_affine_matmul_1_fu_209_A_address0,
        A_ce0 => grp_k2c_affine_matmul_1_fu_209_A_ce0,
        A_q0 => input_array_q0,
        B_0_address0 => grp_k2c_affine_matmul_1_fu_209_B_0_address0,
        B_0_ce0 => grp_k2c_affine_matmul_1_fu_209_B_0_ce0,
        B_0_q0 => kernel_array_0_q0,
        B_1_address0 => grp_k2c_affine_matmul_1_fu_209_B_1_address0,
        B_1_ce0 => grp_k2c_affine_matmul_1_fu_209_B_1_ce0,
        B_1_q0 => kernel_array_1_q0,
        B_2_address0 => grp_k2c_affine_matmul_1_fu_209_B_2_address0,
        B_2_ce0 => grp_k2c_affine_matmul_1_fu_209_B_2_ce0,
        B_2_q0 => kernel_array_2_q0,
        B_3_address0 => grp_k2c_affine_matmul_1_fu_209_B_3_address0,
        B_3_ce0 => grp_k2c_affine_matmul_1_fu_209_B_3_ce0,
        B_3_q0 => kernel_array_3_q0,
        d_address0 => grp_k2c_affine_matmul_1_fu_209_d_address0,
        d_ce0 => grp_k2c_affine_matmul_1_fu_209_d_ce0,
        d_q0 => bias_array_q0,
        outrows => outrows_reg_424,
        outcols => outcols_reg_430,
        innerdim => innerdim_reg_441);

    grp_k2c_relu_func_fu_231 : component k2c_relu_func
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_relu_func_fu_231_ap_start,
        ap_done => grp_k2c_relu_func_fu_231_ap_done,
        ap_idle => grp_k2c_relu_func_fu_231_ap_idle,
        ap_ready => grp_k2c_relu_func_fu_231_ap_ready,
        x_address0 => grp_k2c_relu_func_fu_231_x_address0,
        x_ce0 => grp_k2c_relu_func_fu_231_x_ce0,
        x_q0 => output_array_q0,
        x_address1 => grp_k2c_relu_func_fu_231_x_address1,
        x_ce1 => grp_k2c_relu_func_fu_231_x_ce1,
        x_we1 => grp_k2c_relu_func_fu_231_x_we1,
        x_d1 => grp_k2c_relu_func_fu_231_x_d1,
        size => grp_k2c_relu_func_fu_231_size);

    WebModel_fadd_32ncud_U68 : component WebModel_fadd_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => output_array_load_reg_414,
        din1 => bias_array_load_reg_409,
        ce => ap_const_logic_1,
        dout => grp_fu_239_p2);

    WebModel_mul_64s_bkb_U69 : component WebModel_mul_64s_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => outcols_reg_430,
        din1 => outrows_reg_424,
        ce => grp_fu_341_ce,
        dout => grp_fu_341_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((grp_k2c_dot_fu_182_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                elsif (((grp_k2c_dot_fu_182_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_k2c_affine_matmul_1_fu_209_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_affine_matmul_1_fu_209_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_k2c_affine_matmul_1_fu_209_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_affine_matmul_1_fu_209_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_affine_matmul_1_fu_209_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_k2c_dot_fu_182_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_dot_fu_182_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (tmp_fu_243_p2 = ap_const_lv1_0))) then 
                    grp_k2c_dot_fu_182_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_dot_fu_182_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_dot_fu_182_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_k2c_relu_func_fu_231_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_relu_func_fu_231_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    grp_k2c_relu_func_fu_231_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_relu_func_fu_231_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_relu_func_fu_231_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i_reg_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_379 = ap_const_lv1_0))) then 
                i_i_reg_160 <= i_i_mid2_reg_388;
            elsif (((grp_k2c_dot_fu_182_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_i_reg_160 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_149_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_272_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_149 <= indvar_flatten_next_fu_278_p2;
            elsif (((grp_k2c_dot_fu_182_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten_reg_149 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    j_i_reg_171_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_272_p2 = ap_const_lv1_0))) then 
                j_i_reg_171 <= j_fu_328_p2;
            elsif (((grp_k2c_dot_fu_182_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_i_reg_171 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_379 = ap_const_lv1_0))) then
                bias_array_load_reg_409 <= bias_array_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_flatten_reg_379 <= exitcond_flatten_fu_272_p2;
                exitcond_flatten_reg_379_pp0_iter1_reg <= exitcond_flatten_reg_379;
                    output_array_addr_reg_398_pp0_iter1_reg(6 downto 0) <= output_array_addr_reg_398(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond_flatten_reg_379_pp0_iter2_reg <= exitcond_flatten_reg_379_pp0_iter1_reg;
                exitcond_flatten_reg_379_pp0_iter3_reg <= exitcond_flatten_reg_379_pp0_iter2_reg;
                exitcond_flatten_reg_379_pp0_iter4_reg <= exitcond_flatten_reg_379_pp0_iter3_reg;
                exitcond_flatten_reg_379_pp0_iter5_reg <= exitcond_flatten_reg_379_pp0_iter4_reg;
                exitcond_flatten_reg_379_pp0_iter6_reg <= exitcond_flatten_reg_379_pp0_iter5_reg;
                    output_array_addr_reg_398_pp0_iter2_reg(6 downto 0) <= output_array_addr_reg_398_pp0_iter1_reg(6 downto 0);
                    output_array_addr_reg_398_pp0_iter3_reg(6 downto 0) <= output_array_addr_reg_398_pp0_iter2_reg(6 downto 0);
                    output_array_addr_reg_398_pp0_iter4_reg(6 downto 0) <= output_array_addr_reg_398_pp0_iter3_reg(6 downto 0);
                    output_array_addr_reg_398_pp0_iter5_reg(6 downto 0) <= output_array_addr_reg_398_pp0_iter4_reg(6 downto 0);
                    output_array_addr_reg_398_pp0_iter6_reg(6 downto 0) <= output_array_addr_reg_398_pp0_iter5_reg(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_272_p2 = ap_const_lv1_0))) then
                i_i_mid2_reg_388 <= i_i_mid2_fu_304_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (tmp_fu_243_p2 = ap_const_lv1_1))) then
                icmp_reg_364 <= icmp_fu_266_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                innerdim_reg_441 <= kernel_shape_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                outcols_reg_430 <= kernel_shape_q0;
                outrows_reg_424 <= outrows_fu_334_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_272_p2 = ap_const_lv1_0))) then
                    output_array_addr_reg_398(6 downto 0) <= tmp_i_cast_fu_323_p1(15 - 1 downto 0)(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_379 = ap_const_lv1_0))) then
                output_array_load_reg_414 <= output_array_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_k2c_affine_matmul_1_fu_209_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                outsize_reg_446 <= grp_fu_341_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_379_pp0_iter5_reg = ap_const_lv1_0))) then
                tmp_10_i_reg_419 <= grp_fu_239_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (tmp_fu_243_p2 = ap_const_lv1_0))) then
                tmp_7_reg_359 <= tmp_7_fu_249_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                tmp_reg_355 <= tmp_fu_243_p2;
            end if;
        end if;
    end process;
    output_array_addr_reg_398(14 downto 7) <= "00000000";
    output_array_addr_reg_398_pp0_iter1_reg(14 downto 7) <= "00000000";
    output_array_addr_reg_398_pp0_iter2_reg(14 downto 7) <= "00000000";
    output_array_addr_reg_398_pp0_iter3_reg(14 downto 7) <= "00000000";
    output_array_addr_reg_398_pp0_iter4_reg(14 downto 7) <= "00000000";
    output_array_addr_reg_398_pp0_iter5_reg(14 downto 7) <= "00000000";
    output_array_addr_reg_398_pp0_iter6_reg(14 downto 7) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, tmp_fu_243_p2, exitcond_flatten_fu_272_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state15, grp_k2c_affine_matmul_1_fu_209_ap_done, ap_CS_fsm_state2, grp_k2c_dot_fu_182_ap_done, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, grp_k2c_relu_func_fu_231_ap_done, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_block_state17_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (tmp_fu_243_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (tmp_fu_243_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_k2c_dot_fu_182_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_flatten_fu_272_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_flatten_fu_272_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_k2c_relu_func_fu_231_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_k2c_affine_matmul_1_fu_209_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(3);
    ap_CS_fsm_state12 <= ap_CS_fsm(4);
    ap_CS_fsm_state13 <= ap_CS_fsm(5);
    ap_CS_fsm_state14 <= ap_CS_fsm(6);
    ap_CS_fsm_state15 <= ap_CS_fsm(7);
    ap_CS_fsm_state16 <= ap_CS_fsm(8);
    ap_CS_fsm_state17 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state17_on_subcall_done_assign_proc : process(tmp_reg_355, grp_k2c_relu_func_fu_231_ap_done)
    begin
                ap_block_state17_on_subcall_done <= ((grp_k2c_relu_func_fu_231_ap_done = ap_const_logic_0) and (tmp_reg_355 = ap_const_lv1_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_flatten_fu_272_p2)
    begin
        if ((exitcond_flatten_fu_272_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state17, ap_block_state17_on_subcall_done)
    begin
        if ((((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_i_phi_fu_164_p4_assign_proc : process(i_i_reg_160, exitcond_flatten_reg_379, ap_CS_fsm_pp0_stage0, i_i_mid2_reg_388, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_379 = ap_const_lv1_0))) then 
            ap_phi_mux_i_i_phi_fu_164_p4 <= i_i_mid2_reg_388;
        else 
            ap_phi_mux_i_i_phi_fu_164_p4 <= i_i_reg_160;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state17, ap_block_state17_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    bias_array_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state15, grp_k2c_affine_matmul_1_fu_209_d_address0, ap_block_pp0_stage0, j_i_cast1_fu_312_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_array_address0 <= j_i_cast1_fu_312_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            bias_array_address0 <= grp_k2c_affine_matmul_1_fu_209_d_address0;
        else 
            bias_array_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    bias_array_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state15, grp_k2c_affine_matmul_1_fu_209_d_ce0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            bias_array_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            bias_array_ce0 <= grp_k2c_affine_matmul_1_fu_209_d_ce0;
        else 
            bias_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_272_p2 <= "1" when (indvar_flatten_reg_149 = ap_const_lv7_40) else "0";
    exitcond_i4_fu_284_p2 <= "1" when (j_i_reg_171 = ap_const_lv7_40) else "0";

    grp_fu_341_ce_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state15, grp_k2c_affine_matmul_1_fu_209_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((grp_k2c_affine_matmul_1_fu_209_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            grp_fu_341_ce <= ap_const_logic_1;
        else 
            grp_fu_341_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_k2c_affine_matmul_1_fu_209_ap_start <= grp_k2c_affine_matmul_1_fu_209_ap_start_reg;
    grp_k2c_dot_fu_182_ap_start <= grp_k2c_dot_fu_182_ap_start_reg;
    grp_k2c_relu_func_fu_231_ap_start <= grp_k2c_relu_func_fu_231_ap_start_reg;

    grp_k2c_relu_func_fu_231_size_assign_proc : process(tmp_reg_355, outsize_reg_446, ap_CS_fsm_state12, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_reg_355 = ap_const_lv1_1))) then 
            grp_k2c_relu_func_fu_231_size <= outsize_reg_446;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_k2c_relu_func_fu_231_size <= ap_const_lv64_40;
        else 
            grp_k2c_relu_func_fu_231_size <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i2_fu_298_p2 <= (ap_phi_mux_i_i_phi_fu_164_p4 xor ap_const_lv7_40);
    i_i_mid2_fu_304_p3 <= 
        i2_fu_298_p2 when (exitcond_i4_fu_284_p2(0) = '1') else 
        ap_phi_mux_i_i_phi_fu_164_p4;
    icmp_fu_266_p2 <= "0" when (tmp_62_fu_256_p4 = ap_const_lv63_0) else "1";
    indvar_flatten_next_fu_278_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_149) + unsigned(ap_const_lv7_1));

    input_array_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state2, grp_k2c_dot_fu_182_A_array_address0, grp_k2c_affine_matmul_1_fu_209_A_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            input_array_address0 <= grp_k2c_affine_matmul_1_fu_209_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_array_address0 <= grp_k2c_dot_fu_182_A_array_address0;
        else 
            input_array_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_array_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state2, grp_k2c_dot_fu_182_A_array_ce0, grp_k2c_affine_matmul_1_fu_209_A_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            input_array_ce0 <= grp_k2c_affine_matmul_1_fu_209_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_array_ce0 <= grp_k2c_dot_fu_182_A_array_ce0;
        else 
            input_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_shape_address0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_243_p2, ap_CS_fsm_state2, grp_k2c_dot_fu_182_A_shape_address0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_243_p2 = ap_const_lv1_1))) then 
            input_shape_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_shape_address0 <= grp_k2c_dot_fu_182_A_shape_address0;
        else 
            input_shape_address0 <= "XXX";
        end if; 
    end process;


    input_shape_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_fu_243_p2, ap_CS_fsm_state2, grp_k2c_dot_fu_182_A_shape_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (tmp_fu_243_p2 = ap_const_lv1_1))) then 
            input_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_shape_ce0 <= grp_k2c_dot_fu_182_A_shape_ce0;
        else 
            input_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_328_p2 <= std_logic_vector(unsigned(j_i_mid2_fu_290_p3) + unsigned(ap_const_lv7_1));
    j_i_cast1_fu_312_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_i_mid2_fu_290_p3),64));
    j_i_mid2_fu_290_p3 <= 
        ap_const_lv7_0 when (exitcond_i4_fu_284_p2(0) = '1') else 
        j_i_reg_171;

    kernel_array_0_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state2, grp_k2c_dot_fu_182_B_array_0_address0, grp_k2c_affine_matmul_1_fu_209_B_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            kernel_array_0_address0 <= grp_k2c_affine_matmul_1_fu_209_B_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_array_0_address0 <= grp_k2c_dot_fu_182_B_array_0_address0;
        else 
            kernel_array_0_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    kernel_array_0_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state2, grp_k2c_dot_fu_182_B_array_0_ce0, grp_k2c_affine_matmul_1_fu_209_B_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            kernel_array_0_ce0 <= grp_k2c_affine_matmul_1_fu_209_B_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_array_0_ce0 <= grp_k2c_dot_fu_182_B_array_0_ce0;
        else 
            kernel_array_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_array_1_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state2, grp_k2c_dot_fu_182_B_array_1_address0, grp_k2c_affine_matmul_1_fu_209_B_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            kernel_array_1_address0 <= grp_k2c_affine_matmul_1_fu_209_B_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_array_1_address0 <= grp_k2c_dot_fu_182_B_array_1_address0;
        else 
            kernel_array_1_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    kernel_array_1_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state2, grp_k2c_dot_fu_182_B_array_1_ce0, grp_k2c_affine_matmul_1_fu_209_B_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            kernel_array_1_ce0 <= grp_k2c_affine_matmul_1_fu_209_B_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_array_1_ce0 <= grp_k2c_dot_fu_182_B_array_1_ce0;
        else 
            kernel_array_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_array_2_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state2, grp_k2c_dot_fu_182_B_array_2_address0, grp_k2c_affine_matmul_1_fu_209_B_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            kernel_array_2_address0 <= grp_k2c_affine_matmul_1_fu_209_B_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_array_2_address0 <= grp_k2c_dot_fu_182_B_array_2_address0;
        else 
            kernel_array_2_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    kernel_array_2_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state2, grp_k2c_dot_fu_182_B_array_2_ce0, grp_k2c_affine_matmul_1_fu_209_B_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            kernel_array_2_ce0 <= grp_k2c_affine_matmul_1_fu_209_B_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_array_2_ce0 <= grp_k2c_dot_fu_182_B_array_2_ce0;
        else 
            kernel_array_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_array_3_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state2, grp_k2c_dot_fu_182_B_array_3_address0, grp_k2c_affine_matmul_1_fu_209_B_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            kernel_array_3_address0 <= grp_k2c_affine_matmul_1_fu_209_B_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_array_3_address0 <= grp_k2c_dot_fu_182_B_array_3_address0;
        else 
            kernel_array_3_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    kernel_array_3_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state2, grp_k2c_dot_fu_182_B_array_3_ce0, grp_k2c_affine_matmul_1_fu_209_B_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            kernel_array_3_ce0 <= grp_k2c_affine_matmul_1_fu_209_B_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_array_3_ce0 <= grp_k2c_dot_fu_182_B_array_3_ce0;
        else 
            kernel_array_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_shape_address0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_243_p2, ap_CS_fsm_state13, ap_CS_fsm_state2, grp_k2c_dot_fu_182_B_shape_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            kernel_shape_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_243_p2 = ap_const_lv1_1))) then 
            kernel_shape_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_shape_address0 <= grp_k2c_dot_fu_182_B_shape_address0;
        else 
            kernel_shape_address0 <= "XXX";
        end if; 
    end process;


    kernel_shape_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_fu_243_p2, ap_CS_fsm_state13, ap_CS_fsm_state2, grp_k2c_dot_fu_182_B_shape_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (tmp_fu_243_p2 = ap_const_lv1_1)))) then 
            kernel_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_shape_ce0 <= grp_k2c_dot_fu_182_B_shape_ce0;
        else 
            kernel_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_array_address0_assign_proc : process(tmp_reg_355, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state15, ap_CS_fsm_state2, grp_k2c_dot_fu_182_C_array_address0, grp_k2c_affine_matmul_1_fu_209_C_address0, grp_k2c_relu_func_fu_231_x_address0, ap_block_pp0_stage0, ap_CS_fsm_state12, ap_CS_fsm_state17, tmp_i_cast_fu_323_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            output_array_address0 <= tmp_i_cast_fu_323_p1(15 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_reg_355 = ap_const_lv1_1)))) then 
            output_array_address0 <= grp_k2c_relu_func_fu_231_x_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            output_array_address0 <= grp_k2c_affine_matmul_1_fu_209_C_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_array_address0 <= grp_k2c_dot_fu_182_C_array_address0;
        else 
            output_array_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_array_address1_assign_proc : process(tmp_reg_355, output_array_addr_reg_398_pp0_iter6_reg, ap_enable_reg_pp0_iter7, grp_k2c_relu_func_fu_231_x_address1, ap_block_pp0_stage0, ap_CS_fsm_state12, ap_CS_fsm_state17)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            output_array_address1 <= output_array_addr_reg_398_pp0_iter6_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_reg_355 = ap_const_lv1_1)))) then 
            output_array_address1 <= grp_k2c_relu_func_fu_231_x_address1;
        else 
            output_array_address1 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_array_ce0_assign_proc : process(tmp_reg_355, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state15, ap_CS_fsm_state2, grp_k2c_dot_fu_182_C_array_ce0, grp_k2c_affine_matmul_1_fu_209_C_ce0, grp_k2c_relu_func_fu_231_x_ce0, ap_CS_fsm_state12, ap_CS_fsm_state17)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_array_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_reg_355 = ap_const_lv1_1)))) then 
            output_array_ce0 <= grp_k2c_relu_func_fu_231_x_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            output_array_ce0 <= grp_k2c_affine_matmul_1_fu_209_C_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_array_ce0 <= grp_k2c_dot_fu_182_C_array_ce0;
        else 
            output_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_array_ce1_assign_proc : process(tmp_reg_355, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter7, grp_k2c_relu_func_fu_231_x_ce1, ap_CS_fsm_state12, ap_CS_fsm_state17)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_array_ce1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_reg_355 = ap_const_lv1_1)))) then 
            output_array_ce1 <= grp_k2c_relu_func_fu_231_x_ce1;
        else 
            output_array_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_array_d0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state2, grp_k2c_dot_fu_182_C_array_d0, grp_k2c_affine_matmul_1_fu_209_C_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            output_array_d0 <= grp_k2c_affine_matmul_1_fu_209_C_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_array_d0 <= grp_k2c_dot_fu_182_C_array_d0;
        else 
            output_array_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_array_d1_assign_proc : process(tmp_reg_355, tmp_10_i_reg_419, ap_enable_reg_pp0_iter7, grp_k2c_relu_func_fu_231_x_d1, ap_block_pp0_stage0, ap_CS_fsm_state12, ap_CS_fsm_state17)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            output_array_d1 <= tmp_10_i_reg_419;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_reg_355 = ap_const_lv1_1)))) then 
            output_array_d1 <= grp_k2c_relu_func_fu_231_x_d1;
        else 
            output_array_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_array_we0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state2, grp_k2c_dot_fu_182_C_array_we0, grp_k2c_affine_matmul_1_fu_209_C_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            output_array_we0 <= grp_k2c_affine_matmul_1_fu_209_C_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_array_we0 <= grp_k2c_dot_fu_182_C_array_we0;
        else 
            output_array_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_array_we1_assign_proc : process(tmp_reg_355, ap_block_pp0_stage0_11001, exitcond_flatten_reg_379_pp0_iter6_reg, ap_enable_reg_pp0_iter7, grp_k2c_relu_func_fu_231_x_we1, ap_CS_fsm_state12, ap_CS_fsm_state17)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_379_pp0_iter6_reg = ap_const_lv1_0))) then 
            output_array_we1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_reg_355 = ap_const_lv1_1)))) then 
            output_array_we1 <= grp_k2c_relu_func_fu_231_x_we1;
        else 
            output_array_we1 <= ap_const_logic_0;
        end if; 
    end process;

    outrows_fu_334_p3 <= 
        input_shape_q0 when (icmp_reg_364(0) = '1') else 
        ap_const_lv64_1;
    tmp_62_fu_256_p4 <= input_ndim_read(63 downto 1);
    tmp_7_fu_249_p2 <= std_logic_vector(unsigned(input_ndim_read) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF));
    tmp_fu_243_p2 <= "1" when (unsigned(input_ndim_read) < unsigned(ap_const_lv64_3)) else "0";
    tmp_i_cast_fu_323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_fu_317_p2),64));
    tmp_i_fu_317_p2 <= std_logic_vector(unsigned(j_i_mid2_fu_290_p3) + unsigned(i_i_mid2_fu_304_p3));
end behav;
